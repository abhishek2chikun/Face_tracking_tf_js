{"version":3,"file":"tf-backend-wasm.fesm.min.js","sources":["../src/kernels/types.ts","../src/kernels/_FusedMatMul.ts","../src/kernels/unary_kernel.ts","../src/kernels/Abs.ts","../src/kernels/binary_kernel.ts","../src/kernels/Add.ts","../src/kernels/AddN.ts","../src/kernels/Identity.ts","../src/kernels/Transpose.ts","../src/kernels/kernel_utils.ts","../src/kernels/ArgMax.ts","../src/kernels/AvgPool.ts","../src/kernels/Reshape.ts","../src/kernels/BatchMatMul.ts","../src/kernels/Cast.ts","../src/kernels/Ceil.ts","../src/kernels/ClipByValue.ts","../node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js","../src/kernels/Concat.ts","../node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js","../src/kernels/Conv2D.ts","../src/kernels/Conv2DBackpropInput.ts","../src/kernels/Cos.ts","../src/kernels/CropAndResize.ts","../src/kernels/Cumsum.ts","../src/kernels/DepthToSpace.ts","../src/kernels/DepthwiseConv2dNative.ts","../src/kernels/Equal.ts","../src/kernels/Exp.ts","../src/kernels/ExpandDims.ts","../src/kernels/Fill.ts","../src/kernels/FlipLeftRight.ts","../src/kernels/Floor.ts","../src/kernels/FloorDiv.ts","../src/kernels/FusedBatchNorm.ts","../src/kernels/FusedConv2D.ts","../src/kernels/FusedDepthwiseConv2D.ts","../src/kernels/GatherNd.ts","../src/kernels/GatherV2.ts","../src/kernels/Greater.ts","../src/kernels/GreaterEqual.ts","../src/kernels/LeakyRelu.ts","../src/kernels/Less.ts","../src/kernels/LessEqual.ts","../src/kernels/Log.ts","../src/kernels/LogicalAnd.ts","../src/kernels/Max.ts","../src/kernels/Maximum.ts","../src/kernels/MaxPool.ts","../src/kernels/Mean.ts","../src/kernels/Min.ts","../src/kernels/Minimum.ts","../src/kernels/Multiply.ts","../src/kernels/Neg.ts","../src/kernels/NonMaxSuppression_util.ts","../src/kernels/NonMaxSuppressionV3.ts","../src/kernels/NonMaxSuppressionV4.ts","../src/kernels/NonMaxSuppressionV5.ts","../src/kernels/NotEqual.ts","../src/kernels/OneHot.ts","../src/kernels/OnesLike.ts","../src/kernels/Pack.ts","../src/kernels/PadV2.ts","../src/kernels/Pow.ts","../src/kernels/Prelu.ts","../src/kernels/Prod.ts","../src/kernels/Range.ts","../node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js","../src/kernels/RealDiv.ts","../src/kernels/Relu.ts","../src/kernels/Relu6.ts","../src/kernels/ResizeBilinear.ts","../src/kernels/Reverse.ts","../src/kernels/RotateWithOffset.ts","../src/kernels/Round.ts","../src/kernels/ScatterNd.ts","../src/kernels/Select.ts","../src/kernels/Sigmoid.ts","../src/kernels/Slice.ts","../src/kernels/Softmax.ts","../src/kernels/Step.ts","../src/kernels/StridedSlice.ts","../src/kernels/Sum.ts","../src/kernels/Tile.ts","../src/kernels/TopK.ts","../src/kernels/ZerosLike.ts","../src/register_all_kernels.ts","../src/kernels/Rsqrt.ts","../src/kernels/Sin.ts","../src/kernels/SplitV.ts","../src/kernels/Sqrt.ts","../src/kernels/Square.ts","../src/kernels/SquaredDifference.ts","../src/kernels/Sub.ts","../src/kernels/Tanh.ts","../src/kernels/Unpack.ts","../src/flags_wasm.ts","../wasm-out/tfjs-backend-wasm-threaded-simd.js","../wasm-out/tfjs-backend-wasm.js","../src/backend_wasm.ts","../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js","../src/version.ts","../src/base.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// This enum must align with the enum defined in cc/backend.h.\nexport enum CppDType {\n  float32 = 0,\n  int32 = 1,\n  bool = 2,\n  string = 3,\n  complex64 = 4\n}\n\n// Must match enum in cc/fusable_activations.h.\nexport enum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3,\n  leakyrelu = 4\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedMatMul:\n    (aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n     bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n     transposeB: boolean, activation: number, biasId: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedMatMul = backend.wasm.cwrap(_FusedMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number',  // activation\n    'number',  // biasId\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number'   // out_id\n  ]);\n}\n\nfunction fusedBatchMatMul(args: {\n  inputs: _FusedMatMulInputs,\n  backend: BackendWasm,\n  attrs: _FusedMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b, bias, preluActivationWeights} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `_FusedMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB, activation, leakyreluAlpha} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `_FusedMatMul only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    biasId = biasData.id;\n  }\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDim = a.shape[0];\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmFusedMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId,\n      leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedMatMulConfig: KernelConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchMatMul as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, TensorInfo, UnaryInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function createUnaryKernelConfig(kernelName: string): KernelConfig {\n  let wasmFunc: (xId: number, outId: number) => void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc =\n        backend.wasm.cwrap(kernelName, null /* void */, ['number', 'number']);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: UnaryInputs}):\n      TensorInfo {\n    const {backend, inputs: {x}} = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n\n    wasmFunc(xId, outId);\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Abs, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const absConfig: KernelConfig = createUnaryKernelConfig(Abs);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BinaryInputs, DataType, KernelConfig, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createBinaryKernelConfig(\n    kernelName: string, supportsFullBroadcast: boolean,\n    dtype?: DataType): KernelConfig {\n  let wasmFunc:\n      (aId: number, aShape: Uint8Array, aShapeLen: number, bId: number,\n       bShape: Uint8Array, bShapeLen: number, dtype: number, outId: number) =>\n          void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // a_id,\n      'array',   // a_shape\n      'number',  // a_shape.length\n      'number',  // b_id\n      'array',   // b_shape\n      'number',  // b_shape.length\n      'number',  // dtype\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: BinaryInputs}):\n      TensorInfo {\n    const {backend, inputs} = args;\n    const {a, b} = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType);\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const kernelFunc = () => wasmFunc(\n        aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n        CppDType[a.dtype], outId);\n\n    // Currently only some float operations support full broadcast.\n    if (supportsFullBroadcast && a.dtype === 'float32') {\n      kernelFunc();\n      return out;\n    }\n\n    const aBroadcastDims = backend_util.getBroadcastDims(a.shape, newShape);\n    const bBroadcastDims = backend_util.getBroadcastDims(b.shape, newShape);\n    const loopsOverAllOfA = aBroadcastDims.every((v, i) => v === i);\n    const loopsOverAllOfB = bBroadcastDims.every((v, i) => v === i);\n    if (loopsOverAllOfA && loopsOverAllOfB) {\n      kernelFunc();\n      return out;\n    } else {\n      throw new Error(\n          `Broadcasting along outer dims is not yet ` +\n          `supported for ${a.dtype} ${kernelName}.`);\n    }\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Add, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\n\nexport const addConfig: KernelConfig =\n    createBinaryKernelConfig(Add, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AddN, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc:\n    (inputIds: Uint8Array, inputIdsLen: number, dtype: number, outId: number) =>\n        void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(AddN, null /* void */, [\n    'array',   // input_ids\n    'number',  // input_ids.length\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction addn(args: {inputs: TensorInfo[], backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n\n  return out;\n}\n\nexport const addNConfig: KernelConfig = {\n  kernelName: AddN,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: addn as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Identity, IdentityInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function identity(args: {inputs: IdentityInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const identityConfig: KernelConfig = {\n  kernelName: Identity,\n  backendName: 'wasm',\n  kernelFunc: identity as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transpose, TransposeAttrs, TransposeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {CppDType} from './types';\n\nlet wasmTranspose: (\n    xId: number, xShape: Uint8Array, xShapeLength: number, dtype: CppDType,\n    outId: number, perm: Uint8Array, permLength: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTranspose = backend.wasm.cwrap(Transpose, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // dtype\n    'number',  // outId\n    'array',   // perm\n    'number',  // perm.length\n  ]);\n}\n\nexport function transpose(\n    args:\n        {inputs: TransposeInputs, backend: BackendWasm, attrs: TransposeAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n  // better due to simpler memory access pattern.\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n\n  let permIsNoOp = true;\n  for (let i = 0; i < perm.length; i++) {\n    if (perm[i] !== i) {\n      permIsNoOp = false;\n    }\n  }\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n  const x = {\n    dataId: inputs.x.dataId,\n    shape: reducedShape,\n    dtype: inputs.x.dtype\n  };\n\n  if (permIsNoOp) {\n    const cloned = identity({inputs, backend});\n    cloned.shape = outShape;\n    return cloned;\n  }\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmTranspose(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes,\n      perm.length);\n  return out;\n}\n\nfunction computeOutShape(inShape: number[], perm: number[]): number[] {\n  const outShape = new Array(inShape.length);\n  for (let i = 0; i < outShape.length; i++) {\n    outShape[i] = inShape[perm[i]];\n  }\n  return outShape;\n}\n\nfunction removeOneSizeDims(\n    shape: number[], perm: number[]): [number[], number[]] {\n  const newShape: number[] = [];\n  const newPerm: number[] = [];\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n    }\n    if (shape[perm[i]] !== 1) {\n      newPerm.push(perm[i]);\n    }\n  }\n  for (let i = 0; i < newPerm.length; ++i) {\n    let minValIdx = -1;\n    for (let j = 0; j < newPerm.length; ++j) {\n      if (newPerm[j] >= i &&\n          (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n        minValIdx = j;\n      }\n    }\n    newPerm[minValIdx] = i;\n  }\n  return [newShape, newPerm];\n}\n\nexport const transposeConfig: KernelConfig = {\n  kernelName: Transpose,\n  backendName: 'wasm',\n  kernelFunc: transpose as {} as KernelFunc,\n  setupFunc: setup,\n};\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\nimport {transpose} from './Transpose';\n\n/**\n * Compute permutation axes and do a transpose if necessary.\n *\n * Used by reduction ops.\n * @param x input TensorInfo\n * @param axis reduction axes\n * @param backend wasm backend instance\n */\nexport function permuteAxesAndTranspose(\n    x: TensorInfo, axis: number|number[], backend: BackendWasm): {\n  transposed: TensorInfo|null,\n  axes: number[],\n  originalAxes: number[],\n  inputWasTransposed: boolean\n} {\n  const xShape = x.shape;\n  const xRank = x.shape.length;\n\n  const originalAxes = util.parseAxisParam(axis, xShape);\n  let axes = originalAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let xTransposed = null;\n  let inputWasTransposed = false;\n  if (permutedAxes != null) {\n    const newShape: number[] = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n      newShape[i] = xShape[permutedAxes[i]];\n    }\n\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    xTransposed =\n        transpose({inputs: {x}, attrs: {perm: permutedAxes}, backend});\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const transposedId = backend.dataIdMap.get(xTransposed.dataId).id;\n    if (transposedId !== xId) {\n      inputWasTransposed = true;\n    }\n  }\n\n  return {transposed: xTransposed, originalAxes, axes, inputWasTransposed};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMax, ArgMaxAttrs, ArgMaxInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmFunc: (\n    xId: number, dtype: number, outerSize: number, innerSize: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFunc = backend.wasm.cwrap(ArgMax, null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // outer_size\n    'number',  // inner_size\n    'number'   // out_id\n  ]);\n}\n\nfunction argmax(\n    args: {inputs: ArgMaxInputs, backend: BackendWasm, attrs: ArgMaxAttrs}) {\n  const {backend, inputs, attrs} = args;\n  const {axis} = attrs as {} as ArgMaxAttrs;\n  const {x} = inputs as {} as ArgMaxInputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const outShape = input.shape.slice(0, -1);\n  const out = backend.makeOutput(outShape, 'int32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const outerSize = util.sizeFromShape(out.shape);\n  const innerSize = input.shape[axes[0]];\n  wasmFunc(inputId, CppDType[input.dtype], outerSize, innerSize, outId);\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  return out;\n}\n\nexport const argMaxConfig: KernelConfig = {\n  kernelName: ArgMax,\n  backendName: 'wasm',\n  kernelFunc: argmax as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool, AvgPoolAttrs, AvgPoolInputs, backend_util, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, strideHeight: number,\n    strideWidth: number, channels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool = backend.wasm.cwrap(AvgPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // channels\n    'number',  // outId\n  ]);\n}\n\nfunction avgPool(\n    args: {inputs: AvgPoolInputs, backend: BackendWasm, attrs: AvgPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(\n        `was backend only supports average pooling with dilation = [1, 1], ` +\n        `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmAvgPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels,\n      outId);\n  return out;\n}\n\nexport const avgPoolConfig: KernelConfig = {\n  kernelName: AvgPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, NamedAttrMap, NamedTensorInfoMap, Reshape, ReshapeAttrs, ReshapeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function reshape(args: {\n  inputs: NamedTensorInfoMap,\n  attrs: NamedAttrMap,\n  backend: BackendWasm\n}) {\n  const {inputs, attrs} = args;\n  const {x} = inputs as {} as ReshapeInputs;\n  const {shape} = attrs as {} as ReshapeAttrs;\n\n  const xSize = util.sizeFromShape(x.shape);\n  const $shape = util.inferFromImplicitShape(shape, xSize);\n\n  util.assert(\n      xSize === util.sizeFromShape($shape),\n      () => `new shape: ${$shape}, old shape: ${x.shape}. New shape and old ` +\n          `shape must have the same number of elements.`);\n\n  // Backend needs to track refCount for the dataId for reshape op\n  args.backend.incRef(x.dataId);\n  return {dataId: x.dataId, shape: $shape, dtype: x.dtype};\n}\n\nexport const reshapeConfig: KernelConfig = {\n  kernelName: Reshape,\n  backendName: 'wasm',\n  kernelFunc: reshape,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BatchMatMul, BatchMatMulAttrs, BatchMatMulInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\n\nlet wasmBatchMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmBatchMatMul = backend.wasm.cwrap(BatchMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number'   // out_id\n  ]);\n}\n\nfunction batchMatMul(args: {\n  inputs: BatchMatMulInputs,\n  backend: BackendWasm,\n  attrs: BatchMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b} = inputs;\n  const {transposeA, transposeB} = attrs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `BatchMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const aRank = a.shape.length;\n  const bRank = b.shape.length;\n\n  const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n  const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n\n  const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n  const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n\n  const outerDimsA = a.shape.slice(0, -2);\n  const outerDimsB = b.shape.slice(0, -2);\n\n  const batchDimA = util.sizeFromShape(outerDimsA);\n  const batchDimB = util.sizeFromShape(outerDimsB);\n\n  const batchDimsCompatible =\n      batchDimA === batchDimB || batchDimA === 1 || batchDimB === 1;\n\n  util.assert(\n      aRank >= 2 && bRank >= 2 && batchDimsCompatible,\n      () => `Error in matMul: the input batch dimensions must either be the ` +\n          `same or at least one input batch dimension must be 1. Got input ` +\n          `batch dimensions of (${outerDimsA}) and (${outerDimsB}).`);\n\n  const outShapeOuterDims =\n      batchDimA > batchDimB ? a.shape.slice(0, -2) : b.shape.slice(0, -2);\n  const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n\n  util.assert(\n      innerShapeA === innerShapeB,\n      () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n          `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n          `${b.shape} and transposeA=${transposeA}` +\n          ` and transposeB=${transposeB} must match.`);\n\n  const a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] :\n                                [batchDimA, outerShapeA, innerShapeA];\n  const b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] :\n                                [batchDimB, innerShapeB, outerShapeB];\n\n  // The rest of the implementation is designed to operate on rank-3 tensors\n  const a3d = reshape({inputs: {x: a}, backend, attrs: {shape: a3dShape}});\n  const b3d = reshape({inputs: {x: b}, backend, attrs: {shape: b3dShape}});\n\n  const a3dId = backend.dataIdMap.get(a3d.dataId).id;\n  const b3dId = backend.dataIdMap.get(b3d.dataId).id;\n\n  const leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\n  const rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\n  const batchDim = Math.max(batchDimA, batchDimB);\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a3d.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a3d.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b3d.shape).buffer);\n\n  wasmBatchMatMul(\n      a3dId, aShapeBytes, a3d.shape.length, b3dId, bShapeBytes,\n      b3d.shape.length, transposeA, transposeB, outId);\n\n  backend.disposeData(a3d.dataId);\n  backend.disposeData(b3d.dataId);\n\n  out.shape = outShape;\n  return out;\n}\n\nexport const batchMatMulConfig: KernelConfig = {\n  kernelName: BatchMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: batchMatMul as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cast, CastAttrs, CastInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function cast(\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const castConfig: KernelConfig = {\n  kernelName: Cast,\n  backendName: 'wasm',\n  kernelFunc: cast as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Ceil} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const ceilConfig: KernelConfig = createUnaryKernelConfig(Ceil);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ClipByValue, ClipByValueAttrs, ClipByValueInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, [\n    'number',  // x_id\n    'number',  // min\n    'number',  // max\n    'number'   // out_id\n  ]);\n}\n\nfunction clip(args: {\n  inputs: ClipByValueInputs,\n  backend: BackendWasm,\n  attrs: ClipByValueAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {clipValueMin, clipValueMax} = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, clipValueMin, clipValueMax, outId);\n  return out;\n}\n\nexport const clipByValueConfig: KernelConfig = {\n  kernelName: ClipByValue,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, buffer, Slice, slice_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function sliceImpl(vals, begin, size, shape, dtype) {\n    const isContinous = slice_util.isSliceContinous(shape, begin, size);\n    const length = util.sizeFromShape(size);\n    const xStrides = util.computeStrides(shape);\n    if (isContinous) {\n        const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n        if (dtype === 'string') {\n            return vals.slice(flatOffset, flatOffset + length);\n        }\n        return vals.subarray(flatOffset, flatOffset + length);\n    }\n    const decodedData = dtype === 'string' ?\n        backend_util.fromUint8ToStringArray(vals) :\n        vals;\n    const inBuf = buffer(shape, dtype, decodedData);\n    const outBuf = buffer(size, dtype);\n    for (let i = 0; i < outBuf.size; ++i) {\n        const outLoc = outBuf.indexToLoc(i);\n        const inLoc = outLoc.map((idx, j) => idx + begin[j]);\n        outBuf.set(inBuf.get(...inLoc), ...outLoc);\n    }\n    if (dtype === 'string') {\n        return backend_util.fromStringArrayToUint8(outBuf.values);\n    }\n    return outBuf.values;\n}\nexport function slice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, size } = attrs;\n    assertNotComplex(x, 'slice');\n    const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\n    slice_util.assertParamsValid(x, $begin, $size);\n    const vals = backend.data.get(x.dataId).values;\n    const outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\n    return backend.makeTensorInfo($size, x.dtype, outVals);\n}\nexport const sliceConfig = {\n    kernelName: Slice,\n    backendName: 'cpu',\n    kernelFunc: slice\n};\n//# sourceMappingURL=Slice.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Concat, ConcatAttrs, ConcatInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {concatImplCPU} from '../kernel_utils/shared';\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nexport function concat(\n    args: {inputs: ConcatInputs, backend: BackendWasm, attrs: ConcatAttrs}) {\n  const {inputs, backend} = args;\n\n  const axis = util.parseAxisParam(args.attrs.axis, inputs[0].shape)[0];\n\n  let outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n\n  // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n  const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\n  if ($inputs.length === 1) {\n    return identity({inputs: {x: $inputs[0]}, backend});\n  }\n\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\n\n  if (util.sizeFromShape(outShape) === 0) {\n    return out;\n  }\n\n  const shapes = $inputs.map(t => t.shape);\n  backend_util.assertParamsConsistent(shapes, axis);\n\n  if ($inputs[0].dtype === 'string') {\n    // Any concat of n-dimensional tensors across any axis can be reduced to\n    // a concatenation of two-dimensional tensors across the axis 1 by first\n    // partitioning the axes of the original tensors into those less than the\n    // axis to be concatenated and the rest. Then reshape the tensors\n    // into a two-dimensional tensor by collapsing these two sets of axes and\n    // concatenate the resulting matrices across the axis 1, finally reshaping\n    // the result to have the proper shape.\n    const inputs2D = $inputs.map(t => {\n      const innerSize = util.sizeFromShape(t.shape.slice(axis));\n      const shape = [-1, innerSize];\n      return reshape({inputs: {x: t}, backend, attrs: {shape}});\n    });\n\n    const inputsValShapes = inputs2D.map(t => {\n      return {vals: backend.readSync(t.dataId), shape: t.shape};\n    });\n\n    // Concats 2d tensors along axis=1.\n    outShape =\n        backend_util.computeOutShape(inputs2D.map(t => t.shape), 1 /* axis */);\n    const simplyConcat = inputs2D[0].shape[0] === 1;\n    const outVals = concatImplCPU(\n                        inputsValShapes, outShape, inputs[0].dtype,\n                        simplyConcat) as string[];\n\n    const finalOutShape =\n        backend_util.computeOutShape($inputs.map(t => t.shape), axis);\n\n    out.shape = finalOutShape;\n    const outData = backend.dataIdMap.get(out.dataId);\n    outData.stringBytes = backend_util.fromStringArrayToUint8(outVals);\n\n    inputs2D.forEach(t => backend.disposeData(t.dataId));\n\n    return out;\n  }\n\n  const batchDim = util.sizeFromShape($inputs[0].shape.slice(0, axis));\n  let sumInnerDims = 0;\n  const innerDims = $inputs.map(input => {\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\n    sumInnerDims += innerDim;\n    return innerDim;\n  });\n  const inVals = $inputs.map(input => backend.typedArrayFromHeap(input));\n  const outVals = backend.typedArrayFromHeap(out);\n  for (let b = 0; b < batchDim; b++) {\n    let outOffset = b * sumInnerDims;\n    for (let i = 0; i < inVals.length; i++) {\n      const innerDim = innerDims[i];\n      const inOffset = b * innerDim;\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n      outVals.set(vals, outOffset);\n      outOffset += innerDim;\n    }\n  }\n  return out;\n}\n\nexport const concatConfig: KernelConfig = {\n  kernelName: Concat,\n  backendName: 'wasm',\n  kernelFunc: concat as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nexport function concatImpl(inputs, outShape, dtype, simplyConcat) {\n    const outVals = util.getArrayFromDType(dtype, util.sizeFromShape(outShape));\n    if (simplyConcat && dtype !== 'string') {\n        // Use built-in TypedArray.set() method for speed.\n        let offset = 0;\n        inputs.forEach(input => {\n            const size = util.sizeFromShape(input.shape);\n            outVals.set(input.vals, offset);\n            offset += size;\n        });\n    }\n    else {\n        let colOffset = 0;\n        inputs.forEach(input => {\n            const decodedData = dtype === 'string' ?\n                backend_util.fromUint8ToStringArray(input.vals) :\n                input.vals;\n            let tIdx = 0;\n            for (let row = 0; row < input.shape[0]; ++row) {\n                const resIdx = row * outShape[1] + colOffset;\n                for (let col = 0; col < input.shape[1]; ++col) {\n                    outVals[resIdx + col] = decodedData[tIdx++];\n                }\n            }\n            colOffset += input.shape[1];\n        });\n    }\n    return outVals;\n}\n//# sourceMappingURL=Concat_impl.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2D, Conv2DAttrs, Conv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv2d = backend.wasm.cwrap(Conv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction conv2d(\n    args: {inputs: Conv2DInputs, backend: BackendWasm, attrs: Conv2DAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode, dataFormat} = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, false, $dataFormat);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend Conv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const conv2DConfig: KernelConfig = {\n  kernelName: Conv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2DBackpropInput: (\n    dyId: number, filterId: number, batchSize: number, filterHeight: number,\n    filterWidth: number, inHeight: number, inWidth: number, inChannels: number,\n    outHeight: number, outWidth: number, outChannels: number,\n    strideHeight: number, strideWidth: number, topPad: number, leftPad: number,\n    fltS0: number, fltS1: number, fltS2: number, xBatchStride: number,\n    xRowStride: number, xColStride: number, xChannelStride: number,\n    yBatchStride: number, yRowStride: number, yColStride: number,\n    yChannelStride: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmConv2DBackpropInput = backend.wasm.cwrap(Conv2DBackpropInput, null, [\n    'number',  // dyId\n    'number',  // filterId\n    'number',  // batchSize\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // inChannels\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // outChannels\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // topPad\n    'number',  // leftPad\n    'number',  // fltS0\n    'number',  // fltS1\n    'number',  // fltS2\n    'number',  // xBatchStride\n    'number',  // xRowStride\n    'number',  // xColStride\n    'number',  // xChannelStride\n    'number',  // yBatchStride\n    'number',  // yRowStride\n    'number',  // yColStride\n    'number',  // yChannelStride\n    'number',  // outId\n  ]);\n}\n\nfunction conv2DBackpropInput(args: {\n  backend: BackendWasm,\n  inputs: Conv2DBackpropInputInputs,\n  attrs: Conv2DBackpropInputAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {dy, filter} = inputs;\n  const {strides, pad, dataFormat, dimRoundingMode, inputShape} = attrs;\n\n  const dilations = 1;\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n  const {\n    batchSize,\n    filterHeight,\n    filterWidth,\n    inChannels,\n    inHeight,\n    inWidth,\n    outChannels,\n    outHeight,\n    outWidth,\n    strideHeight,\n    strideWidth\n  } = convInfo;\n\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n  const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  const dxStrides = util.computeStrides(convInfo.inShape);\n  const dyStrides = util.computeStrides(dy.shape);\n  const [fltS0, fltS1, fltS2] = util.computeStrides(filter.shape);\n  const xBatchStride = dxStrides[0];\n  const xRowStride = isChannelsLast ? dxStrides[1] : dxStrides[2];\n  const xColStride = isChannelsLast ? dxStrides[2] : 1;\n  const xChannelStride = isChannelsLast ? 1 : dxStrides[1];\n  const yBatchStride = dyStrides[0];\n  const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n  const yColStride = isChannelsLast ? dyStrides[2] : 1;\n  const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n\n  const out = backend.makeOutput(convInfo.inShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const dyId = backend.dataIdMap.get(dy.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  wasmConv2DBackpropInput(\n      dyId, filterId, batchSize, filterHeight, filterWidth, inHeight, inWidth,\n      inChannels, outHeight, outWidth, outChannels, strideHeight, strideWidth,\n      topPad, leftPad, fltS0, fltS1, fltS2, xBatchStride, xRowStride,\n      xColStride, xChannelStride, yBatchStride, yRowStride, yColStride,\n      yChannelStride, outId);\n  return out;\n}\n\nexport const conv2DBackpropInputConfig: KernelConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2DBackpropInput as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cos, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const cosConfig: KernelConfig = createUnaryKernelConfig(Cos);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {CropAndResize, CropAndResizeAttrs, CropAndResizeInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\n// Must match enum in CropAndResize.cc\nenum InterpolationMethod {\n  bilinear = 0,\n  nearest = 1\n}\n\nlet wasmCropAndResize: (\n    imagesId: number, boxesId: number, boxIndId: number, numBoxes: number,\n    imagesShape: Uint8Array, cropHeight: number, cropWidth: number,\n    method: number, extrapolationValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmCropAndResize = backend.wasm.cwrap(CropAndResize, null /*void*/, [\n    'number',  // imagesId\n    'number',  // boxesId\n    'number',  // boxIndId\n    'number',  // numBoxes\n    'array',   // images shape\n    'number',  // cropHeight\n    'number',  // cropWidth\n    'number',  // method\n    'number',  // extrapolation value\n    'number'   // out id\n  ]);\n}\n\nfunction cropAndResize(args: {\n  backend: BackendWasm,\n  inputs: CropAndResizeInputs,\n  attrs: CropAndResizeAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {method, extrapolationValue, cropSize} = attrs;\n  const {image, boxes, boxInd} = inputs;\n\n  const numBoxes = boxes.shape[0];\n\n  const [cropHeight, cropWidth] = cropSize as [number, number];\n  const outShape = [numBoxes, cropHeight, cropWidth, image.shape[3]];\n\n  let imagesData = backend.dataIdMap.get(image.dataId);\n  let castedData;\n  if (image.dtype !== 'float32') {\n    castedData = cast({backend, inputs: {x: image}, attrs: {dtype: 'float32'}});\n    imagesData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const imagesId = imagesData.id;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imagesShapeBytes = new Uint8Array(new Int32Array(image.shape).buffer);\n\n  wasmCropAndResize(\n      imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight,\n      cropWidth,\n      InterpolationMethod[method as {} as keyof typeof InterpolationMethod],\n      extrapolationValue, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const cropAndResizeConfig: KernelConfig = {\n  kernelName: CropAndResize,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cropAndResize as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Cumsum, CumsumAttrs, CumsumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nimport {transpose} from './Transpose';\n\nlet wasmCumsum: (xId: number, exclusive: number, reverse: number,\n                 finalDim: number, outId: number, dtype: CppDType) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmCumsum = backend.wasm.cwrap(Cumsum, null /* void */, [\n    'number', // x_id\n    'number', // exclusive\n    'number', // reverse\n    'number', // final_dim\n    'number', // out_id\n    'number'  // dtype\n  ]);\n}\n\nexport function cumsum(\n  args: {inputs: CumsumInputs, backend: BackendWasm, attrs: CumsumAttrs}):\nTensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n  const xRank = x.shape.length;\n\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\n    () => `cumsum does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumsum', [permutedAxis], xRank);\n\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumsum(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\n             permutedOutId, CppDType[x.dtype]);\n\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose(\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\n\nexport const cumsumConfig: KernelConfig = {\n  kernelName: Cumsum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumsum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DepthToSpace, DepthToSpaceAttrs, DepthToSpaceInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthToSpace: (\n    xId: number, blockSize: number, channelsLast: number, xStrides: Uint8Array,\n    xStridesLength: number, outputShape: Uint8Array, outputStrides: Uint8Array,\n    outSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmDepthToSpace = backend.wasm.cwrap(DepthToSpace, null /*void*/, [\n    'number',  // xId\n    'number',  // blockSize\n    'number',  // channelsLast\n    'array',   // xStrides\n    'number',  // xStridesLength\n    'array',   // outputShape\n    'array',   // outputStrides\n    'number',  // outSize\n    'number',  // outId\n  ]);\n}\n\nexport function depthToSpace(args: {\n  backend: BackendWasm,\n  inputs: DepthToSpaceInputs,\n  attrs: DepthToSpaceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n  const {blockSize, dataFormat} = attrs;\n\n  util.assert(\n      blockSize > 1,\n      () => `blockSize should be > 1 for depthToSpace, but was: ${blockSize}`);\n\n  const batchSize = x.shape[0];\n  const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n  const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n  const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n\n  const outputHeight = inputHeight * blockSize;\n  const outputWidth = inputWidth * blockSize;\n  const outputDepth = inputDepth / (blockSize * blockSize);\n\n  const outputShape = (dataFormat === 'NHWC') ?\n      [batchSize, outputHeight, outputWidth, outputDepth] :\n      [batchSize, outputDepth, outputHeight, outputWidth];\n\n  const out = backend.makeOutput(outputShape, 'float32');\n\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n  const xStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n\n  const outputShapeBytes = new Uint8Array(new Int32Array(outputShape).buffer);\n  const outStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(outputShape)).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const channelsLast = dataFormat === 'NHWC' ? 1 : 0;\n  wasmDepthToSpace(\n      xId, blockSize, channelsLast, xStridesBytes, x.shape.length - 1,\n      outputShapeBytes, outStridesBytes, outputShape.length, outId);\n\n  return out;\n}\n\nexport const depthToSpaceConfig: KernelConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthToSpace as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNative, DepthwiseConv2dNativeAttrs, DepthwiseConv2dNativeInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDepthwiseConv2d =\n      backend.wasm.cwrap(DepthwiseConv2dNative, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // outId\n      ]);\n}\n\nfunction depthwiseConv2d(args: {\n  inputs: DepthwiseConv2dNativeInputs,\n  backend: BackendWasm,\n  attrs: DepthwiseConv2dNativeAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode} = attrs;\n\n  const $dilations = dilations == null ? [1, 1] : dilations;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides,\n      ($dilations as number | [number, number]), pad, dimRoundingMode,\n      true /* depthwise */);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmDepthwiseConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const depthwiseConv2dNativeConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthwiseConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Equal, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const equalConfig: KernelConfig =\n    createBinaryKernelConfig(Equal, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Exp, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const expConfig: KernelConfig = createUnaryKernelConfig(Exp);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ExpandDims, ExpandDimsAttrs, ExpandDimsInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\n\nexport function expandDims(args: {\n  inputs: ExpandDimsInputs,\n  attrs: ExpandDimsAttrs,\n  backend: BackendWasm\n}) {\n  const {inputs, attrs, backend} = args;\n  const {input} = inputs;\n  const {dim} = attrs;\n\n  const inputRank = input.shape.length;\n  const newShape = input.shape.slice();\n  let $dim = dim;\n  if (dim < 0) {\n    // Negative value is counted from the tail of rank.\n    util.assert(\n        -(inputRank + 1) <= dim,\n        () => `Axis must be in the interval [${- (inputRank + 1)}, ${\n            inputRank}]`);\n    $dim = inputRank + dim + 1;\n  }\n  newShape.splice($dim, 0, 1);\n\n  return reshape({inputs: {x: input}, backend, attrs: {shape: newShape}});\n}\n\nexport const expandDimsConfig: KernelConfig = {\n  kernelName: ExpandDims,\n  backendName: 'wasm',\n  kernelFunc: expandDims as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {Fill, FillAttrs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction fill(args: {attrs: FillAttrs, backend: BackendWasm}) {\n  const {attrs: {shape, value, dtype}, backend} = args;\n  const out = backend.makeOutput(shape, dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(value as number);\n  return out;\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'wasm',\n  kernelFunc: fill as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FlipLeftRight, FlipLeftRightInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFlipLeftRight: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFlipLeftRight = backend.wasm.cwrap(FlipLeftRight, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // outId\n  ]);\n}\n\nexport function flipLeftRight(\n    args: {inputs: FlipLeftRightInputs, backend: BackendWasm}): TensorInfo {\n  const {inputs, backend} = args;\n  const {image} = inputs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  wasmFlipLeftRight(\n      imageId, batch, imageHeight, imageWidth, numChannels, outId);\n  return out;\n}\n\nexport const flipLeftRightConfig: KernelConfig = {\n  kernelName: FlipLeftRight,\n  backendName: 'wasm',\n  kernelFunc: flipLeftRight as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Floor, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const floorConfig: KernelConfig = createUnaryKernelConfig(Floor);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FloorDiv, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const floorDivConfig: KernelConfig =\n    createBinaryKernelConfig(FloorDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FusedBatchNorm, FusedBatchNormAttrs, FusedBatchNormInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmBatchNorm: (\n    xId: number, meanId: number, varianceId: number, offsetId: number,\n    scaleId: number, varianceEpsilon: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBatchNorm = backend.wasm.cwrap(\n      FusedBatchNorm, null /* void */,\n      ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction fusedBatchNorm(args: {\n  backend: BackendWasm,\n  inputs: FusedBatchNormInputs,\n  attrs: FusedBatchNormAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {varianceEpsilon} = attrs;\n  const {x, mean, variance, offset, scale} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmBatchNorm(\n      xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n  return out;\n}\n\nexport const fusedBatchNormConfig: KernelConfig = {\n  kernelName: FusedBatchNorm,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchNorm as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedConv2D, FusedConv2DAttrs, FusedConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // biasId\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // activation\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number',  // outId\n  ]);\n}\n\nfunction fusedConv2d(args: {\n  inputs: FusedConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode);\n\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedConv2DConfig: KernelConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedDepthwiseConv2D, FusedDepthwiseConv2DAttrs, FusedDepthwiseConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedDepthwiseConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedDepthwiseConv2d =\n      backend.wasm.cwrap(FusedDepthwiseConv2D, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // biasId\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // activation\n        'number',  // preluActivationWeightsId\n        'number',  // leakyreluAlpha\n        'number',  // outId\n      ]);\n}\n\nfunction fusedDepthwiseConv2d(args: {\n  inputs: FusedDepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedDepthwiseConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, true /* depthwise */);\n\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedDepthwiseConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedDepthwiseConv2DConfig: KernelConfig = {\n  kernelName: FusedDepthwiseConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedDepthwiseConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {gather_util, GatherNd, GatherNdInputs, KernelConfig, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmGatherNd: (\n    xId: number, dtype: CppDType, indicesId: number, numSlices: number,\n    sliceRank: number, sliceSize: number, strides: Uint8Array, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGatherNd = backend.wasm.cwrap(GatherNd, null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'number',  // indicesId\n    'number',  // numSlices\n    'number',  // sliceRank\n    'number',  // sliceSize\n    'array',   // strides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherNd(args: {backend: BackendWasm, inputs: GatherNdInputs}):\n    TensorInfo {\n  const {backend, inputs} = args;\n  const {params, indices} = inputs;\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      gather_util.prepareAndValidate(params, indices);\n\n  const out = backend.makeOutput(resultShape, params.dtype);\n  if (numSlices === 0) {\n    return out;\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const xData = backend.dataIdMap.get(params.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmGatherNd(\n      xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize,\n      stridesBytes, outId);\n\n  return out;\n}\n\nexport const gatherNdConfig: KernelConfig = {\n  kernelName: GatherNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherNd\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, GatherV2, GatherV2Attrs, GatherV2Inputs, KernelConfig, KernelFunc, Tensor, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {CppDType} from './types';\n\nlet wasmGather: (\n    xId: number, dtype: CppDType, xStrides: Uint8Array, stridesSize: number,\n    indicesId: number, batchSize: number, outStrides: Uint8Array,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'array',   // xStrides\n    'number',  // stridesSize\n    'number',  // indicesId\n    'number',  // batchSize\n    'array',   // outStrides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherV2(\n    args: {backend: BackendWasm, inputs: GatherV2Inputs, attrs: GatherV2Attrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, indices} = inputs;\n  const {axis, batchDims} = attrs;\n\n  const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(\n      x as Tensor, indices as Tensor, parsedAxis, batchDims);\n\n  const flattenX = reshape({\n    inputs: {x},\n    attrs: {\n      shape: [\n        shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n        shapeInfo.sliceSize\n      ]\n    },\n    backend\n  });\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const flattenIndex = reshape({\n    inputs: {x: indices},\n    attrs: {shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]},\n    backend\n  });\n  const flattenOutputShape = [\n    shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n    shapeInfo.sliceSize\n  ];\n\n  const out = backend.makeOutput(flattenOutputShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n  const stridesSize = flattenX.shape.length - 1;\n\n  const xData = backend.dataIdMap.get(flattenX.dataId);\n  const xId = xData.id;\n\n  const indicesData = backend.dataIdMap.get(flattenIndex.dataId);\n  const indicesId = indicesData.id;\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const xStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenX.shape)).buffer);\n  const outStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenOutputShape)).buffer);\n\n  wasmGather(\n      xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId,\n      shapeInfo.batchSize, outStridesBytes, outId);\n\n  backend.disposeData(flattenX.dataId);\n  backend.disposeData(flattenIndex.dataId);\n\n  // reshape\n  out.shape = shapeInfo.outputShape;\n  return out;\n}\n\nexport const gatherV2Config: KernelConfig = {\n  kernelName: GatherV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherV2 as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Greater, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterConfig: KernelConfig =\n    createBinaryKernelConfig(Greater, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {GreaterEqual, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterEqualConfig: KernelConfig =\n    createBinaryKernelConfig(GreaterEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LeakyRelu, LeakyReluAttrs, LeakyReluInputs, util} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, leakyreluAlpha: number, outId: number) => void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(LeakyRelu, null /* void */, [\n    'number',  // x_id,\n    'number',  // leakyrelu_alpha\n    'number'   // out_id\n  ]);\n}\n\nexport function leakyRelu(\n    args:\n        {inputs: LeakyReluInputs, attrs: LeakyReluAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {alpha}, backend} = args;\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n\n  if (util.sizeFromShape(x.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmFunc(xId, alpha, outId);\n  }\n\n  return out;\n}\n\nexport const leakyReluConfig: KernelConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: leakyRelu as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Less} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessConfig: KernelConfig =\n    createBinaryKernelConfig(Less, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LessEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessEqualConfig: KernelConfig =\n    createBinaryKernelConfig(LessEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Log} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const logConfig: KernelConfig = createUnaryKernelConfig(Log);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalAnd} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalAndConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalAnd, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {Max, MaxAttrs, MaxInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMax: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMax = backend.wasm.cwrap(Max, null /*void*/, ['number, number, number']);\n}\n\nfunction max(args: {backend: BackendWasm, inputs: MaxInputs, attrs: MaxAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {reductionIndices: axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('max', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMax(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const maxConfig: KernelConfig = {\n  kernelName: Max,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: max as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Maximum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const maximumConfig: KernelConfig =\n    createBinaryKernelConfig(Maximum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool, MaxPoolAttrs, MaxPoolInputs, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, dilationHeight: number,\n    dilationWidth: number, strideHeight: number, strideWidth: number,\n    inputChannels: number, outputChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool = backend.wasm.cwrap(MaxPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction maxPool(\n    args: {inputs: MaxPoolInputs, backend: BackendWasm, attrs: MaxPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMaxPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth,\n      strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\n\nexport const maxPoolConfig: KernelConfig = {\n  kernelName: MaxPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Mean, MeanAttrs, MeanInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {cast} from './Cast';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMean: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMean =\n      backend.wasm.cwrap(Mean, null /*void*/, ['number, number, number']);\n}\n\nexport function mean(\n    args: {backend: BackendWasm, inputs: MeanInputs, attrs: MeanAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'mean', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput =\n        cast({backend, inputs: {x: input}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMean(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n\n  return out;\n}\n\nexport const meanConfig: KernelConfig = {\n  kernelName: Mean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: mean as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Min, MinAttrs, MinInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMin: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMin = backend.wasm.cwrap(Min, null /*void*/, ['number, number, number']);\n}\n\nfunction min(args: {backend: BackendWasm, inputs: MinInputs, attrs: MinAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const inputRank = input.shape.length;\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMin(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const minConfig: KernelConfig = {\n  kernelName: Min,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: min as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Minimum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const minimumConfig: KernelConfig =\n    createBinaryKernelConfig(Minimum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Multiply} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const multiplyConfig: KernelConfig =\n    createBinaryKernelConfig(Multiply, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Neg} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const negConfig: KernelConfig = createUnaryKernelConfig(Neg);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendWasm} from '../backend_wasm';\n\n// Analogous to `struct Result` in `non_max_suppression_impl.h`.\ninterface Result {\n  pSelectedIndices: number;\n  selectedSize: number;\n  pSelectedScores: number;\n  pValidOutputs: number;\n}\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(\n    backend: BackendWasm, resOffset: number): Result {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  const pValidOutputs = result[3];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV3, NonMaxSuppressionV3Attrs, NonMaxSuppressionV3Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV3,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV3Inputs,\n  attrs: NonMaxSuppressionV3Attrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset =\n      wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V3, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  return selectedIndicesTensor;\n}\n\nexport const nonMaxSuppressionV3Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    padToMaxOutputSize: boolean) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV4,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'bool',    // padToMaxOutputSize\n      ]);\n}\n\nfunction nonMaxSuppressionV4(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV4Inputs,\n  attrs: NonMaxSuppressionV4Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, padToMaxOutputSize} =\n      attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      padToMaxOutputSize);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V4, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  const validOutputsTensor = backend.makeOutput([], 'int32', pValidOutputs);\n\n  return [selectedIndicesTensor, validOutputsTensor];\n}\n\nexport const nonMaxSuppressionV4Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: nonMaxSuppressionV4 as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc:\n    (boxesId: number, scoresId: number, maxOutputSize: number,\n     iouThreshold: number, scoreThreshold: number, softNmsSigma: number) =>\n        number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV5,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'number',  // softNmsSigma\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV5Inputs,\n  attrs: NonMaxSuppressionV5Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using validOutputs for V5, we have to delete it from the\n  // heap.\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const selectedScoresTensor =\n      backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n\n  return [selectedIndicesTensor, selectedScoresTensor];\n}\n\nexport const nonMaxSuppressionV5Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, NotEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const notEqualConfig: KernelConfig =\n    createBinaryKernelConfig(NotEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmOneHot: (\n    indicesId: number, depth: number, onValue: number, offValue: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmOneHot = backend.wasm.cwrap(OneHot, null /* void */, [\n    'number',  // indices_id\n    'number',  // depth,\n    'number',  // onValue\n    'number',  // offValue\n    'number'   // out_id\n  ]);\n}\n\nfunction oneHot(\n    args: {inputs: OneHotInputs, attrs: OneHotAttrs, backend: BackendWasm}) {\n  const {inputs, backend, attrs} = args;\n  const {indices} = inputs;\n  const {depth, onValue, offValue} = attrs;\n\n  const out = backend.makeOutput([...indices.shape, depth], 'int32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  wasmOneHot(indicesId, depth, onValue, offValue, outId);\n\n  return out;\n}\n\nexport const oneHotConfig: KernelConfig = {\n  kernelName: OneHot,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: oneHot as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OnesLike, OnesLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction onesLike(args: {inputs: OnesLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(1);\n  return out;\n}\n\nexport const onesLikeConfig: KernelConfig = {\n  kernelName: OnesLike,\n  backendName: 'wasm',\n  kernelFunc: onesLike as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Pack, PackAttrs, PackInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\n\nimport {concat} from './Concat';\nimport {expandDims} from './ExpandDims';\n\nexport function pack(\n    args: {inputs: PackInputs, backend: BackendWasm, attrs: PackAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {axis} = attrs;\n\n  if (inputs.length === 1) {\n    return expandDims(\n        {inputs: {input: inputs[0]}, backend, attrs: {dim: axis}});\n  }\n\n  const shape = inputs[0].shape;\n  const dtype = inputs[0].dtype;\n\n  inputs.forEach(t => {\n    util.assertShapesMatch(\n        shape, t.shape,\n        'All tensors passed to stack must have matching shapes');\n    util.assert(\n        dtype === t.dtype,\n        () => 'All tensors passed to stack must have matching dtypes');\n  });\n\n  const intermediateTensorInfos: TensorInfo[] = [];\n  const expandedTensors = inputs.map(t => {\n    const expandedT =\n        expandDims({inputs: {input: t}, backend, attrs: {dim: axis}});\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n\n  const result = concat({inputs: expandedTensors, backend, attrs: {axis}});\n\n  intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\n\n  return result;\n}\n\nexport const packConfig: KernelConfig = {\n  kernelName: Pack,\n  backendName: 'wasm',\n  kernelFunc: pack as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, PadV2, PadV2Attrs, PadV2Inputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmPadV2: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array,\n    constantValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPadV2 = backend.wasm.cwrap(PadV2, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // constantValue\n    'number',  // outId\n  ]);\n}\n\nfunction pad(\n    args: {inputs: PadV2Inputs, backend: BackendWasm, attrs: PadV2Attrs}) {\n  const {inputs: {x}, backend, attrs: {paddings, constantValue}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmPadV2(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, constantValue, outId);\n  return out;\n}\n\nexport const padV2Config: KernelConfig = {\n  kernelName: PadV2,\n  backendName: 'wasm',\n  kernelFunc: pad as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Pow} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const powConfig: KernelConfig =\n    createBinaryKernelConfig(Pow, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Prelu, PreluInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmPrelu: (xId: number, weightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPrelu = backend.wasm.cwrap(Prelu, null /* void */, [\n    'number',  // x_id\n    'number',  // weights_id\n    'number'   // out_id\n  ]);\n}\n\nfunction prelu(args: {inputs: PreluInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {x, alpha} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmPrelu(xId, weightsId, outId);\n  return out;\n}\n\nexport const preluConfig: KernelConfig = {\n  kernelName: Prelu,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prelu as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Prod, ProdAttrs, ProdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nimport {CppDType} from './types';\n\nlet wasmProd: (\n    xId: number, reduceSize: number,\n    dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmProd = backend.wasm.cwrap(Prod, null /*void*/, [\n    'number',\n    'number',\n    'number',\n    'number'\n  ]);\n}\n\nfunction prod(args: {\n  backend: BackendWasm,\n  inputs: ProdInputs,\n  attrs: ProdAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'prod', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmProd(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const prodConfig: KernelConfig = {\n  kernelName: Prod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prod as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Range, RangeAttrs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {rangeImplCPU} from '../kernel_utils/shared';\n\nexport const range =\n    (args: {backend: BackendWasm, attrs: RangeAttrs}): TensorInfo => {\n      const {backend, attrs} = args;\n      const {start, stop, step, dtype} = attrs;\n      const values = rangeImplCPU(start, stop, step, dtype);\n\n      const out = backend.makeOutput([values.length], dtype);\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(values);\n      return out;\n    };\n\nexport const rangeConfig: KernelConfig = {\n  kernelName: Range,\n  backendName: 'wasm',\n  kernelFunc: range as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function rangeImpl(start, stop, step, dtype) {\n    const sameStartStop = start === stop;\n    const increasingRangeNegativeStep = start < stop && step < 0;\n    const decreasingRangePositiveStep = stop < start && step > 1;\n    if (sameStartStop || increasingRangeNegativeStep ||\n        decreasingRangePositiveStep) {\n        return util.makeZerosTypedArray(0, dtype);\n    }\n    const numElements = Math.abs(Math.ceil((stop - start) / step));\n    const values = util.makeZerosTypedArray(numElements, dtype);\n    if (stop < start && step === 1) {\n        // Auto adjust the step's sign if it hasn't been set\n        // (or was set to 1)\n        step = -1;\n    }\n    values[0] = start;\n    for (let i = 1; i < values.length; i++) {\n        values[i] = values[i - 1] + step;\n    }\n    return values;\n}\n//# sourceMappingURL=Range_impl.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, RealDiv} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const realDivConfig: KernelConfig =\n    createBinaryKernelConfig(RealDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const reluConfig: KernelConfig = createUnaryKernelConfig(Relu);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu6} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const relu6Config: KernelConfig = createUnaryKernelConfig(Relu6);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeBilinear, ResizeBilinearAttrs, ResizeBilinearInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmResizeBilinear: (\n    xId: number, batch: number, oldHeight: number, oldWidth: number,\n    numChannels: number, newHeight: number, newWidth: number,\n    alignCorners: number, halfPixelCenters: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinear = backend.wasm.cwrap(ResizeBilinear, null /*void*/, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // oldHeight\n    'number',  // oldWidth\n    'number',  // numChannels\n    'number',  // newHeight\n    'number',  // newWidth\n    'number',  // alignCorners\n    'number',  // halfPixelCenters\n    'number'   // outId\n  ]);\n}\n\nfunction resizeBilinear(args: {\n  backend: BackendWasm,\n  inputs: ResizeBilinearInputs,\n  attrs: ResizeBilinearAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n\n  const {images} = inputs;\n  const {alignCorners, halfPixelCenters, size} = attrs;\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData =\n        cast({backend, inputs: {x: images}, attrs: {dtype: 'float32'}});\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeBilinear(\n      xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth,\n      alignCorners ? 1 : 0, halfPixelCenters ? 1 : 0, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const resizeBilinearConfig: KernelConfig = {\n  kernelName: ResizeBilinear,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinear as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reverse, ReverseAttrs, ReverseInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nlet wasmReverse: (\n    xId: number, axes: Uint8Array, axesLength: number, outShape: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmReverse = backend.wasm.cwrap(Reverse, null, [\n    'number',  // x_id\n    'array',   // axes\n    'number',  // axes_length\n    'array',   // out_shape\n    'number',  // out_shape_length\n    'number'   // out_id\n  ]);\n}\n\nexport function reverse(\n    args: {inputs: ReverseInputs, backend: BackendWasm, attrs: ReverseAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {dims} = attrs;\n\n  const axes = util.parseAxisParam(dims, x.shape);\n\n  if (x.shape.length === 0) {\n    return identity({inputs: {x}, backend});\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const axesBytes = new Uint8Array(new Int32Array(axes).buffer);\n  const outShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmReverse(\n      xId, axesBytes, axes.length, outShapeBytes, x.shape.length, outId);\n\n  const reshaped =\n      reshape({inputs: {x: out}, attrs: {shape: x.shape}, backend});\n\n  backend.disposeData(out.dataId);\n  return reshaped;\n}\n\nexport const reverseConfig: KernelConfig = {\n  kernelName: Reverse,\n  backendName: 'wasm',\n  kernelFunc: reverse as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs, TensorInfo} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmRotate: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, radians: number, centerX: number, centerY: number,\n    fillBytes: Uint8Array, fillLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // radians\n    'number',  // centerX\n    'number',  // centerY\n    'array',   // fillBytes\n    'number',  // fillLength\n    'number',  // outId\n  ]);\n}\n\nexport function rotateWithOffset(args: {\n  inputs: RotateWithOffsetInputs,\n  backend: BackendWasm,\n  attrs: RotateWithOffsetAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {image} = inputs;\n  const {radians, fillValue, center} = attrs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  const [centerX, centerY] =\n      backend_util.getImageCenter(center, imageHeight, imageWidth);\n\n  const fillIsBlack = fillValue === 0;\n  const fullOpacityValue = 255;\n\n  const fillValues = typeof fillValue === 'number' ?\n      [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] :\n      [...fillValue, fullOpacityValue];\n  const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n\n  wasmRotate(\n      imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX,\n      centerY, fillBytes, fillValues.length, outId);\n  return out;\n}\n\nexport const rotateWithOffsetConfig: KernelConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'wasm',\n  kernelFunc: rotateWithOffset as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Round} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const roundConfig: KernelConfig = createUnaryKernelConfig(Round);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, scatter_util, ScatterNd, ScatterNdAttrs, ScatterNdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmScatterNd: (\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmScatterNd = backend.wasm.cwrap(ScatterNd, null /*void*/, [\n    'number',  // indicesId\n    'number',  // updatesId\n    'number',  // dtype\n    'number',  // sliceRank\n    'number',  // numUpdates\n    'number',  // sliceSize\n    'array',   // strides\n    'number',  // outputSize\n    'number'   // outId\n  ]);\n}\n\nfunction scatterNd(\n    args:\n        {backend: BackendWasm, inputs: ScatterNdInputs, attrs: ScatterNdAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {indices, updates} = inputs;\n  const {shape} = attrs;\n\n  const out = backend.makeOutput(shape, updates.dtype);\n  if (util.sizeFromShape(shape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      scatter_util.calculateShapes(updates, indices, shape);\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmScatterNd(\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId);\n\n  return out;\n}\n\nexport const scatterNdConfig: KernelConfig = {\n  kernelName: ScatterNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: scatterNd as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Select, SelectInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSelect: (\n    conditionId: number, tId: number, eId: number, offset: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmSelect = backend.wasm.cwrap('SelectV2', null, [\n    'number',  // conditionId\n    'number',  // tId\n    'number',  // eId\n    'number',  // offset\n    'number',  // outId\n  ]);\n}\n\nfunction select(args: {inputs: SelectInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {condition, t, e} = inputs;\n\n  const conditionId = backend.dataIdMap.get(condition.dataId).id;\n  const tId = backend.dataIdMap.get(t.dataId).id;\n  const eId = backend.dataIdMap.get(e.dataId).id;\n  const out = backend.makeOutput(t.shape, t.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const cRank = condition.shape.length;\n  const tRank = t.shape.length;\n\n  const offset = cRank === 0 || cRank > 1 || tRank === 1 ?\n      1 :\n      util.sizeFromShape(t.shape.slice(1));\n\n  wasmSelect(conditionId, tId, eId, offset, outId);\n  return out;\n}\n\nexport const selectConfig: KernelConfig = {\n  kernelName: Select,\n  backendName: 'wasm',\n  kernelFunc: select as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Sigmoid, SigmoidInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Sigmoid, null /* void */, ['number', 'number']);\n}\n\nfunction sigmoid(args: {backend: BackendWasm, inputs: SigmoidInputs}):\n    TensorInfo {\n  const {backend, inputs: {x}} = args;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId);\n  return out;\n}\n\nexport const sigmoidConfig: KernelConfig = {\n  kernelName: 'Sigmoid',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sigmoid as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {sliceImplCPU} from '../kernel_utils/shared';\n\nexport function slice(\n    args: {inputs: SliceInputs, attrs: SliceAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {begin, size}, backend} = args;\n\n  const [begin_, size_] = slice_util.parseSliceParams(x, begin, size);\n\n  const isContinous = slice_util.isSliceContinous(x.shape, begin_, size_);\n  const xVals = backend.readSync(x.dataId);\n  const out = backend.makeOutput(size_, x.dtype);\n  const xStrides = util.computeStrides(x.shape);\n  const outData = backend.dataIdMap.get(out.dataId);\n\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin_, xStrides);\n\n    if (x.dtype === 'string') {\n      outData.stringBytes =\n          (xVals as Uint8Array[])\n              .slice(flatOffset, flatOffset + util.sizeFromShape(size_));\n    } else {\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(\n          (xVals as TypedArray)\n              .subarray(flatOffset, flatOffset + util.sizeFromShape(size_)));\n    }\n\n    return out;\n  }\n\n  if (x.dtype === 'string') {\n    const res = sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype);\n    outData.stringBytes = res as Uint8Array[];\n    return out;\n  }\n\n  const outVals = backend.typedArrayFromHeap(out);\n  const rank = x.shape.length;\n  if (rank === 2) {\n    slice2d(\n        xVals as TypedArray, xStrides[0], outVals, begin_ as [number, number],\n        size_ as [number, number]);\n  } else if (rank === 3) {\n    slice3d(\n        xVals as TypedArray, xStrides[0], xStrides[1], outVals,\n        begin_ as [number, number, number], size_ as [number, number, number]);\n  } else if (rank === 4) {\n    slice4d(\n        xVals as TypedArray, xStrides[0], xStrides[1], xStrides[2], outVals,\n        begin_ as [number, number, number, number],\n        size_ as [number, number, number, number]);\n  } else {\n    const res =\n        sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype) as TypedArray;\n    outVals.set(res);\n  }\n\n  return out;\n}\n\nfunction slice2d(\n    xVals: backend_util.TypedArray, xStride: number,\n    outVals: backend_util.TypedArray, begin: [number, number],\n    size: [number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const endI = beginI + size[0];\n  for (let i = beginI; i < endI; i++) {\n    const xOffset = i * xStride + beginJ;\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n    outOffset += size[1];\n  }\n}\n\nfunction slice3d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    outVals: backend_util.TypedArray, begin: [number, number, number],\n    size: [number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n      outOffset += size[2];\n    }\n  }\n}\n\nfunction slice4d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    xStride3: number, outVals: backend_util.TypedArray,\n    begin: [number, number, number, number],\n    size: [number, number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  const endK = beginK + size[2];\n  const beginL = begin[3];\n\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      for (let k = beginK; k < endK; k++) {\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n        outOffset += size[3];\n      }\n    }\n  }\n}\n\nexport const sliceConfig: KernelConfig = {\n  kernelName: Slice,\n  backendName: 'wasm',\n  kernelFunc: slice as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Softmax, SoftmaxAttrs, SoftmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number, channels: number, batch: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Softmax, null /* void */, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // channels\n    'number'   // batch\n  ]);\n}\n\nfunction softmax(\n    args: {backend: BackendWasm, inputs: SoftmaxInputs, attrs: SoftmaxAttrs}):\n    TensorInfo {\n  const {backend, inputs: {logits}, attrs: {dim}} = args;\n  const xId = backend.dataIdMap.get(logits.dataId).id;\n  const out = backend.makeOutput(logits.shape, logits.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const channels = logits.shape[dim];\n  const batch = util.sizeFromShape(logits.shape) / channels;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId, channels, batch);\n  return out;\n}\n\nexport const softmaxConfig: KernelConfig = {\n  kernelName: Softmax,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: softmax as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Step, StepAttrs, StepInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmStep: (xId: number, alpha: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStep = backend.wasm.cwrap(Step, null /*void*/, [\n    'number',  // x_id\n    'number',  // alpha\n    'number',  // out_id\n  ]);\n}\n\nfunction step(\n    args: {backend: BackendWasm, inputs: StepInputs, attrs: StepAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {alpha} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmStep(xId, alpha, outId);\n  return out;\n}\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: step as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, StridedSlice, StridedSliceAttrs, StridedSliceInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\n\nlet wasmStridedSlice: (\n    xId: number, xStridesBytes: Uint8Array, xRank: number,\n    beginBytes: Uint8Array, endBytes: Uint8Array, stridesBytes: Uint8Array,\n    outShapeBytes: Uint8Array, outStridesBytes: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStridedSlice = backend.wasm.cwrap(StridedSlice, null /*void*/, [\n    'number',  // xId\n    'array',   // xStrides\n    'number',  // xRank\n    'array',   // beginBytes\n    'array',   // endBytes\n    'array',   // stridesBytes\n    'array',   // outShapeBytes\n    'array',   // outStridesBytes\n    'number',  // outShapeLength\n    'number',  // outId\n  ]);\n}\n\nexport function stridedSlice(args: {\n  backend: BackendWasm,\n  inputs: StridedSliceInputs,\n  attrs: StridedSliceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n\n  let {begin, end, strides} = attrs;\n  if (strides == null) {\n    strides = new Array(begin.length);\n  }\n\n  const {beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask} = attrs;\n\n  const ellipsisAxes = backend_util.slice_util.maskToAxes(ellipsisMask);\n  if (ellipsisAxes.length > 1) {\n    throw new Error('Multiple ellipses in slice is not allowed.');\n  }\n\n  if (ellipsisMask !== 0 && newAxisMask !== 0) {\n    throw new Error(\n        'Using both ellipsisMask and newAxisMask is not yet supported.');\n  }\n\n  if (ellipsisMask !== 0 && shrinkAxisMask !== 0) {\n    throw new Error(\n        'Using both ellipsisMask and shrinkAxisMask is not yet supported.');\n  }\n\n  const numInterpolatedAxes = x.shape.length - begin.length;\n\n  // Expand the dims of x based on the newAxisMask.\n  const expandAxes = backend_util.slice_util.maskToAxes(newAxisMask);\n  const newShape = x.shape.slice();\n  expandAxes.forEach(axis => {\n    begin[axis] = 0;\n    end[axis] = 1;\n    newShape.splice(axis, 0, 1);\n  });\n\n  const xReshaped = reshape({inputs: {x}, attrs: {shape: newShape}, backend});\n\n  const {\n    begin: normalizedBegin,\n    end: normalizedEnd,\n    strides: normalizedStrides\n  } =\n      backend_util.slice_util.getNormalizedAxes(\n          xReshaped.shape, ellipsisAxes, numInterpolatedAxes, begin, end,\n          strides, beginMask, endMask, ellipsisMask);\n  begin = normalizedBegin;\n  end = normalizedEnd;\n  strides = normalizedStrides;\n\n  const shrinkAxes = backend_util.slice_util.maskToAxes(shrinkAxisMask);\n  // Adjust the ends based on the shrink mask.\n  shrinkAxes.forEach(axis => {\n    end[axis] = begin[axis] + 1;\n    strides[axis] = 1;\n  });\n\n  // Figure out the output shape.\n  const size = backend_util.slice_util.computeOutShape(begin, end, strides);\n  // Remove the axes based on shrinkMask.\n  const outShape = size.filter((_, axis) => shrinkAxes.indexOf(axis) === -1);\n\n  const nonStrided = strides.every(v => v === 1);\n  if (nonStrided) {\n    const xSliced = slice(\n        {inputs: {x: xReshaped}, attrs: {begin, size}, backend});\n    backend.disposeData(xReshaped.dataId);\n    const reshaped =\n        reshape({inputs: {x: xSliced}, attrs: {shape: outShape}, backend});\n    backend.disposeData(xSliced.dataId);\n    return reshaped;\n  }\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (!outShape.some(axis => axis === 0)) {\n    const xId = backend.dataIdMap.get(xReshaped.dataId).id;\n    const xStridesBytes = new Uint8Array(\n        new Int32Array(util.computeStrides(xReshaped.shape)).buffer);\n    const beginBytes = new Uint8Array(new Int32Array(begin).buffer);\n    const endBytes = new Uint8Array(new Int32Array(end).buffer);\n    const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n    const outputShapeBytes = new Uint8Array(new Int32Array(outShape).buffer);\n    const outStridesBytes =\n        new Uint8Array(new Int32Array(util.computeStrides(outShape)).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    wasmStridedSlice(\n        xId, xStridesBytes, xReshaped.shape.length, beginBytes, endBytes,\n        stridesBytes, outputShapeBytes, outStridesBytes, outShape.length,\n        outId);\n  }\n  backend.disposeData(xReshaped.dataId);\n\n  const reshaped =\n      reshape({inputs: {x: out}, attrs: {shape: outShape}, backend});\n\n  backend.disposeData(out.dataId);\n  return reshaped;\n}\n\nexport const stridedSliceConfig: KernelConfig = {\n  kernelName: StridedSlice,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: stridedSlice as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Sum, SumAttrs, SumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmSum: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSum = backend.wasm.cwrap(Sum, null /*void*/, ['number, number, number']);\n}\n\nfunction sum(args: {backend: BackendWasm, inputs: SumInputs, attrs: SumAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'sum', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmSum(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const sumConfig: KernelConfig = {\n  kernelName: Sum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Tile, TileAttrs, TileInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmTile: (\n    xId: number, xShape: Uint8Array, xShapeSize: number, newShape: Uint8Array,\n    newShapeSize: number, dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTile = backend.wasm.cwrap(Tile, null /* void */, [\n    'number',  // x_id\n    'array',   // x_shape\n    'number',  // x_shape.length\n    'array',   // new_shape\n    'number',  // new_shape.length\n    'number'   // out_id\n  ]);\n}\n\nfunction tile(\n    args: {inputs: TileInputs, backend: BackendWasm, attrs: TileAttrs}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {reps} = attrs;\n\n  const newShape: number[] = new Array(x.shape.length);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[i] * reps[i];\n  }\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTile(\n      xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length,\n      CppDType[out.dtype], outId);\n  return out;\n}\n\nexport const tileConfig: KernelConfig = {\n  kernelName: Tile,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tile as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, TopK, TopKAttrs, TopKInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmTopK: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number,\n    xDtype: CppDType, k: number, sorted: boolean, outValuesId: number,\n    outIndicesId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTopK = backend.wasm.cwrap(TopK, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'number',  // k\n    'bool',    // sorted\n    'number',  // outValuesId\n    'number',  // outIndicesId\n  ]);\n}\n\nexport const topk:\n    (args: {inputs: TopKInputs, backend: BackendWasm, attrs: TopKAttrs}) =>\n        TensorInfo[] | TensorInfo = ({inputs, backend, attrs}) => {\n          const {x} = inputs;\n          const {k, sorted} = attrs;\n\n          const xId = backend.dataIdMap.get(x.dataId).id;\n          const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n          const outputShape = x.shape.slice();\n          outputShape[outputShape.length - 1] = k;\n          const outValues = backend.makeOutput(outputShape, x.dtype);\n          const outValuesId = backend.dataIdMap.get(outValues.dataId).id;\n          const outIndices = backend.makeOutput(outputShape, 'int32');\n          const outIndicesId = backend.dataIdMap.get(outIndices.dataId).id;\n\n          wasmTopK(\n              xId, xShapeBytes, x.shape.length, CppDType[x.dtype], k, sorted,\n              outValuesId, outIndicesId);\n\n          return [outValues, outIndices];\n        };\n\nexport const topKConfig: KernelConfig = {\n  kernelName: TopK,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: topk as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ZerosLike, ZerosLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction zerosLike(args: {inputs: ZerosLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(0);\n  return out;\n}\n\nexport const zerosLikeConfig: KernelConfig = {\n  kernelName: ZerosLike,\n  backendName: 'wasm',\n  kernelFunc: zerosLike as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport {KernelConfig, registerKernel} from '@tensorflow/tfjs-core';\n\nimport {fusedMatMulConfig} from './kernels/_FusedMatMul';\nimport {absConfig} from './kernels/Abs';\nimport {addConfig} from './kernels/Add';\nimport {addNConfig} from './kernels/AddN';\nimport {argMaxConfig} from './kernels/ArgMax';\nimport {avgPoolConfig} from './kernels/AvgPool';\nimport {batchMatMulConfig} from './kernels/BatchMatMul';\nimport {castConfig} from './kernels/Cast';\nimport {ceilConfig} from './kernels/Ceil';\nimport {clipByValueConfig} from './kernels/ClipByValue';\nimport {concatConfig} from './kernels/Concat';\nimport {conv2DConfig} from './kernels/Conv2D';\nimport {conv2DBackpropInputConfig} from './kernels/Conv2DBackpropInput';\nimport {cosConfig} from './kernels/Cos';\nimport {cropAndResizeConfig} from './kernels/CropAndResize';\nimport {cumsumConfig} from './kernels/Cumsum';\nimport {depthToSpaceConfig} from './kernels/DepthToSpace';\nimport {depthwiseConv2dNativeConfig} from './kernels/DepthwiseConv2dNative';\nimport {equalConfig} from './kernels/Equal';\nimport {expConfig} from './kernels/Exp';\nimport {expandDimsConfig} from './kernels/ExpandDims';\nimport {fillConfig} from './kernels/Fill';\nimport {flipLeftRightConfig} from './kernels/FlipLeftRight';\nimport {floorConfig} from './kernels/Floor';\nimport {floorDivConfig} from './kernels/FloorDiv';\nimport {fusedBatchNormConfig} from './kernels/FusedBatchNorm';\nimport {fusedConv2DConfig} from './kernels/FusedConv2D';\nimport {fusedDepthwiseConv2DConfig} from './kernels/FusedDepthwiseConv2D';\nimport {gatherNdConfig} from './kernels/GatherNd';\nimport {gatherV2Config} from './kernels/GatherV2';\nimport {greaterConfig} from './kernels/Greater';\nimport {greaterEqualConfig} from './kernels/GreaterEqual';\nimport {identityConfig} from './kernels/Identity';\nimport {leakyReluConfig} from './kernels/LeakyRelu';\nimport {lessConfig} from './kernels/Less';\nimport {lessEqualConfig} from './kernels/LessEqual';\nimport {logConfig} from './kernels/Log';\nimport {logicalAndConfig} from './kernels/LogicalAnd';\nimport {maxConfig} from './kernels/Max';\nimport {maximumConfig} from './kernels/Maximum';\nimport {maxPoolConfig} from './kernels/MaxPool';\nimport {meanConfig} from './kernels/Mean';\nimport {minConfig} from './kernels/Min';\nimport {minimumConfig} from './kernels/Minimum';\nimport {multiplyConfig} from './kernels/Multiply';\nimport {negConfig} from './kernels/Neg';\nimport {nonMaxSuppressionV3Config} from './kernels/NonMaxSuppressionV3';\nimport {nonMaxSuppressionV4Config} from './kernels/NonMaxSuppressionV4';\nimport {nonMaxSuppressionV5Config} from './kernels/NonMaxSuppressionV5';\nimport {notEqualConfig} from './kernels/NotEqual';\nimport {oneHotConfig} from './kernels/OneHot';\nimport {onesLikeConfig} from './kernels/OnesLike';\nimport {packConfig} from './kernels/Pack';\nimport {padV2Config} from './kernels/PadV2';\nimport {powConfig} from './kernels/Pow';\nimport {preluConfig} from './kernels/Prelu';\nimport {prodConfig} from './kernels/Prod';\nimport {rangeConfig} from './kernels/Range';\nimport {realDivConfig} from './kernels/RealDiv';\nimport {reluConfig} from './kernels/Relu';\nimport {relu6Config} from './kernels/Relu6';\nimport {reshapeConfig} from './kernels/Reshape';\nimport {resizeBilinearConfig} from './kernels/ResizeBilinear';\nimport {reverseConfig} from './kernels/Reverse';\nimport {rotateWithOffsetConfig} from './kernels/RotateWithOffset';\nimport {roundConfig} from './kernels/Round';\nimport {rsqrtConfig} from './kernels/Rsqrt';\nimport {scatterNdConfig} from './kernels/ScatterNd';\nimport {selectConfig} from './kernels/Select';\nimport {sigmoidConfig} from './kernels/Sigmoid';\nimport {sinConfig} from './kernels/Sin';\nimport {sliceConfig} from './kernels/Slice';\nimport {softmaxConfig} from './kernels/Softmax';\nimport {splitVConfig} from './kernels/SplitV';\nimport {sqrtConfig} from './kernels/Sqrt';\nimport {squareConfig} from './kernels/Square';\nimport {squaredDifferenceConfig} from './kernels/SquaredDifference';\nimport {stepConfig} from './kernels/Step';\nimport {stridedSliceConfig} from './kernels/StridedSlice';\nimport {subConfig} from './kernels/Sub';\nimport {sumConfig} from './kernels/Sum';\nimport {tanhConfig} from './kernels/Tanh';\nimport {tileConfig} from './kernels/Tile';\nimport {topKConfig} from './kernels/TopK';\nimport {transposeConfig} from './kernels/Transpose';\nimport {unpackConfig} from './kernels/Unpack';\nimport {zerosLikeConfig} from './kernels/ZerosLike';\n\n// List all kernel configs here\nconst kernelConfigs: KernelConfig[] = [\n  absConfig,\n  addConfig,\n  addNConfig,\n  argMaxConfig,\n  avgPoolConfig,\n  batchMatMulConfig,\n  castConfig,\n  ceilConfig,\n  clipByValueConfig,\n  concatConfig,\n  conv2DConfig,\n  conv2DBackpropInputConfig,\n  cosConfig,\n  cropAndResizeConfig,\n  cumsumConfig,\n  depthToSpaceConfig,\n  depthwiseConv2dNativeConfig,\n  equalConfig,\n  expConfig,\n  expandDimsConfig,\n  fillConfig,\n  flipLeftRightConfig,\n  floorConfig,\n  floorDivConfig,\n  fusedMatMulConfig,\n  fusedBatchNormConfig,\n  fusedConv2DConfig,\n  fusedDepthwiseConv2DConfig,\n  gatherNdConfig,\n  gatherV2Config,\n  greaterConfig,\n  greaterEqualConfig,\n  identityConfig,\n  leakyReluConfig,\n  lessConfig,\n  lessEqualConfig,\n  logConfig,\n  logicalAndConfig,\n  maxConfig,\n  maximumConfig,\n  maxPoolConfig,\n  meanConfig,\n  minConfig,\n  minimumConfig,\n  multiplyConfig,\n  negConfig,\n  nonMaxSuppressionV3Config,\n  nonMaxSuppressionV4Config,\n  nonMaxSuppressionV5Config,\n  notEqualConfig,\n  oneHotConfig,\n  onesLikeConfig,\n  packConfig,\n  padV2Config,\n  powConfig,\n  preluConfig,\n  prodConfig,\n  rangeConfig,\n  realDivConfig,\n  reluConfig,\n  relu6Config,\n  reshapeConfig,\n  resizeBilinearConfig,\n  reverseConfig,\n  rotateWithOffsetConfig,\n  rsqrtConfig,\n  roundConfig,\n  scatterNdConfig,\n  selectConfig,\n  sigmoidConfig,\n  sinConfig,\n  sliceConfig,\n  softmaxConfig,\n  splitVConfig,\n  sqrtConfig,\n  squareConfig,\n  squaredDifferenceConfig,\n  stepConfig,\n  stridedSliceConfig,\n  subConfig,\n  sumConfig,\n  tanhConfig,\n  tileConfig,\n  topKConfig,\n  transposeConfig,\n  unpackConfig,\n  zerosLikeConfig\n];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Rsqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const rsqrtConfig: KernelConfig = createUnaryKernelConfig(Rsqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sin} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sinConfig: KernelConfig = createUnaryKernelConfig(Sin);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SplitV, SplitVAttrs, SplitVInputs, util} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nexport function splitV(\n    args: {inputs: SplitVInputs, attrs: SplitVAttrs, backend: BackendWasm}) {\n  const {inputs, attrs, backend} = args;\n  const {x} = inputs;\n  const {numOrSizeSplits, axis} = attrs;\n\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const xSliceSize = [...size];\n    xSliceSize[$axis] = s;\n    const xSlice =\n        slice({inputs: {x}, attrs: {begin, size: xSliceSize}, backend});\n    begin[$axis] += s;\n    return xSlice;\n  });\n}\n\nexport const splitVConfig: KernelConfig = {\n  kernelName: SplitV,\n  backendName: 'wasm',\n  kernelFunc: splitV as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sqrtConfig: KernelConfig = createUnaryKernelConfig(Sqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Square} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const squareConfig: KernelConfig = createUnaryKernelConfig(Square);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, SquaredDifference} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const squaredDifferenceConfig: KernelConfig =\n    createBinaryKernelConfig(SquaredDifference, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sub} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const subConfig: KernelConfig =\n    createBinaryKernelConfig(Sub, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tanh} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanhConfig: KernelConfig = createUnaryKernelConfig(Tanh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Unpack, UnpackAttrs, UnpackInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nfunction unpack(\n    args: {inputs: UnpackInputs, backend: BackendWasm, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {value} = inputs;\n  let {axis} = attrs;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  const numOutputs = value.shape[axis];\n  const rank = value.shape.length;\n  const outShape: number[] = new Array(rank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < rank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n  const outs: TensorInfo[] = new Array(numOutputs);\n  const begin = new Array(rank).fill(0);\n  const size = value.shape.slice();\n  size[axis] = 1;\n  for (let i = 0; i < outs.length; i++) {\n    begin[axis] = i;\n    outs[i] = slice({inputs: {x: value}, attrs: {begin, size}, backend});\n  }\n  return outs.map(({dataId, dtype}) => ({dataId, dtype, shape: outShape}));\n}\n\nexport const unpackConfig: KernelConfig = {\n  kernelName: Unpack,\n  backendName: 'wasm',\n  kernelFunc: unpack as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '@tensorflow/tfjs-core';\n\nconst ENV = env();\n\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag(\n    // This typed array passed in to WebAssembly.validate is WebAssembly binary\n    // code. In this case it is a small program that contains SIMD\n    // instructions.\n    'WASM_HAS_SIMD_SUPPORT', async () => WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1,  4, 1,   96, 0,  0, 3,\n      2, 1,  0,   10,  9, 1, 7, 0, 65, 0, 253, 15, 26, 11\n    ])));\n\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\n  // TODO(annxingyuan): Enable node support once this is resolved:\n  // https://github.com/tensorflow/tfjs/issues/3830\n  if (ENV.get('IS_NODE')) {\n    return false;\n  }\n\n  try {\n    // Test for transferability of SABs (needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    // This typed array is a WebAssembly program containing threaded\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n});\n","\nvar WasmBackendModuleThreadedSimd = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModuleThreadedSimd) {\n  WasmBackendModuleThreadedSimd = WasmBackendModuleThreadedSimd || {};\n\nfunction GROWABLE_HEAP_I8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP8}function GROWABLE_HEAP_U8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU8}function GROWABLE_HEAP_I32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP32}function GROWABLE_HEAP_U32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU32}function GROWABLE_HEAP_F64(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF64}var Module=typeof WasmBackendModuleThreadedSimd!==\"undefined\"?WasmBackendModuleThreadedSimd:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var ENVIRONMENT_IS_PTHREAD=Module[\"ENVIRONMENT_IS_PTHREAD\"]||false;if(ENVIRONMENT_IS_PTHREAD){buffer=Module[\"buffer\"]}var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"};var nodeWorkerThreads;try{nodeWorkerThreads=require(\"worker_threads\")}catch(e){console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');throw e}global.Worker=nodeWorkerThreads.Worker}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(typeof _scriptDir !== \"undefined\" && _scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}if(ENVIRONMENT_IS_NODE){read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret}}else{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}if(ENVIRONMENT_IS_NODE){if(typeof performance===\"undefined\"){global.performance=require(\"perf_hooks\").performance}}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var Atomics_load=Atomics.load;var Atomics_store=Atomics.store;var Atomics_compareExchange=Atomics.compareExchange;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmModule;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var str=\"\";while(!(idx>=endIdx)){var u0=heap[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(GROWABLE_HEAP_U8(),ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,GROWABLE_HEAP_U8(),outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}function writeArrayToMemory(array,buffer){GROWABLE_HEAP_I8().set(array,buffer)}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;if(ENVIRONMENT_IS_PTHREAD){wasmMemory=Module[\"wasmMemory\"];buffer=Module[\"buffer\"]}else{if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_MEMORY/65536,\"maximum\":2147483648/65536,\"shared\":true});if(!(wasmMemory.buffer instanceof SharedArrayBuffer)){err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");if(ENVIRONMENT_IS_NODE){console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\")}throw Error(\"bad memory\")}}}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;if(!ENVIRONMENT_IS_PTHREAD)__ATINIT__.push({func:function(){___wasm_call_ctors()}});if(ENVIRONMENT_IS_PTHREAD)runtimeInitialized=true;function preRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){if(ENVIRONMENT_IS_PTHREAD)return;runtimeExited=true}function postRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){assert(!ENVIRONMENT_IS_PTHREAD,\"addRunDependency cannot be used in a pthread worker\");runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(ENVIRONMENT_IS_PTHREAD)console.error(\"Pthread aborting at \"+(new Error).stack);what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix)}var fileURIPrefix=\"file://\";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix)}var wasmBinaryFile=\"tfjs-backend-wasm-threaded-simd.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmTable=Module[\"asm\"][\"F\"];wasmModule=module;if(!ENVIRONMENT_IS_PTHREAD){var numWorkersToLoad=PThread.unusedWorkers.length;PThread.unusedWorkers.forEach(function(w){PThread.loadWasmModuleToWorker(w,function(){if(!--numWorkersToLoad)removeRunDependency(\"wasm-instantiate\")})})}}if(!ENVIRONMENT_IS_PTHREAD){addRunDependency(\"wasm-instantiate\")}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var ASM_CONSTS={8991:function($0,$1){setTimeout(function(){__emscripten_do_dispatch_to_thread($0,$1)},0)}};function initPthreadsJS(){PThread.initRuntime()}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function _emscripten_futex_wake(addr,count){if(addr<=0||addr>GROWABLE_HEAP_I8().length||addr&3!=0||count<0)return-28;if(count==0)return 0;if(count>=2147483647)count=Infinity;var mainThreadWaitAddress=Atomics.load(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2);var mainThreadWoken=0;if(mainThreadWaitAddress==addr){var loadedAddr=Atomics.compareExchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,mainThreadWaitAddress,0);if(loadedAddr==mainThreadWaitAddress){--count;mainThreadWoken=1;if(count<=0)return 1}}var ret=Atomics.notify(GROWABLE_HEAP_I32(),addr>>2,count);if(ret>=0)return ret+mainThreadWoken;throw\"Atomics.notify returned an unexpected value \"+ret}Module[\"_emscripten_futex_wake\"]=_emscripten_futex_wake;function killThread(pthread_ptr){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!pthread_ptr)throw\"Internal Error! Null pthread_ptr in killThread!\";GROWABLE_HEAP_I32()[pthread_ptr+12>>2]=0;var pthread=PThread.pthreads[pthread_ptr];pthread.worker.terminate();PThread.freeThreadData(pthread);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(pthread.worker),1);pthread.worker.pthread=undefined}function cancelThread(pthread_ptr){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!pthread_ptr)throw\"Internal Error! Null pthread_ptr in cancelThread!\";var pthread=PThread.pthreads[pthread_ptr];pthread.worker.postMessage({\"cmd\":\"cancel\"})}function cleanupThread(pthread_ptr){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!pthread_ptr)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";GROWABLE_HEAP_I32()[pthread_ptr+12>>2]=0;var pthread=PThread.pthreads[pthread_ptr];if(pthread){var worker=pthread.worker;PThread.returnWorkerToPool(worker)}}var PThread={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){var pthreadPoolSize=8;for(var i=0;i<pthreadPoolSize;++i){PThread.allocateUnusedWorker()}},initRuntime:function(){var tb=_malloc(228);for(var i=0;i<228/4;++i)GROWABLE_HEAP_U32()[tb/4+i]=0;GROWABLE_HEAP_I32()[tb+12>>2]=tb;var headPtr=tb+152;GROWABLE_HEAP_I32()[headPtr>>2]=headPtr;var tlsMemory=_malloc(512);for(var i=0;i<128;++i)GROWABLE_HEAP_U32()[tlsMemory/4+i]=0;Atomics.store(GROWABLE_HEAP_U32(),tb+100>>2,tlsMemory);Atomics.store(GROWABLE_HEAP_U32(),tb+40>>2,tb);__emscripten_thread_init(tb,!ENVIRONMENT_IS_WORKER,1);_emscripten_register_main_browser_thread_id(tb)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){while(PThread.threadExitHandlers.length>0){PThread.threadExitHandlers.pop()()}if(ENVIRONMENT_IS_PTHREAD&&_pthread_self())___pthread_tsd_run_dtors()},threadExit:function(exitCode){var tb=_pthread_self();if(tb){Atomics.store(GROWABLE_HEAP_U32(),tb+4>>2,exitCode);Atomics.store(GROWABLE_HEAP_U32(),tb+0>>2,1);Atomics.store(GROWABLE_HEAP_U32(),tb+56>>2,1);Atomics.store(GROWABLE_HEAP_U32(),tb+60>>2,0);PThread.runExitHandlers();_emscripten_futex_wake(tb+0,2147483647);__emscripten_thread_init(0,0,0);if(ENVIRONMENT_IS_PTHREAD){postMessage({\"cmd\":\"exit\"})}}},threadCancel:function(){PThread.runExitHandlers();var tb=_pthread_self();Atomics.store(GROWABLE_HEAP_U32(),tb+4>>2,-1);Atomics.store(GROWABLE_HEAP_U32(),tb+0>>2,1);_emscripten_futex_wake(tb+0,2147483647);__emscripten_thread_init(0,0,0);postMessage({\"cmd\":\"cancelDone\"})},terminateAllThreads:function(){for(var t in PThread.pthreads){var pthread=PThread.pthreads[t];if(pthread&&pthread.worker){PThread.returnWorkerToPool(pthread.worker)}}PThread.pthreads={};for(var i=0;i<PThread.unusedWorkers.length;++i){var worker=PThread.unusedWorkers[i];worker.terminate()}PThread.unusedWorkers=[];for(var i=0;i<PThread.runningWorkers.length;++i){var worker=PThread.runningWorkers[i];var pthread=worker.pthread;PThread.freeThreadData(pthread);worker.terminate()}PThread.runningWorkers=[]},freeThreadData:function(pthread){if(!pthread)return;if(pthread.threadInfoStruct){var tlsMemory=GROWABLE_HEAP_I32()[pthread.threadInfoStruct+100>>2];GROWABLE_HEAP_I32()[pthread.threadInfoStruct+100>>2]=0;_free(tlsMemory);_free(pthread.threadInfoStruct)}pthread.threadInfoStruct=0;if(pthread.allocatedOwnStack&&pthread.stackBase)_free(pthread.stackBase);pthread.stackBase=0;if(pthread.worker)pthread.worker.pthread=null},returnWorkerToPool:function(worker){PThread.runWithoutMainThreadQueuedCalls(function(){delete PThread.pthreads[worker.pthread.threadInfoStruct];PThread.unusedWorkers.push(worker);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);PThread.freeThreadData(worker.pthread);worker.pthread=undefined})},runWithoutMainThreadQueuedCalls:function(func){GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>2]=0;try{func()}finally{GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>2]=1}},receiveObjectTransfer:function(data){},loadWasmModuleToWorker:function(worker,onFinishedLoading){worker.onmessage=function(e){var d=e[\"data\"];var cmd=d[\"cmd\"];if(worker.pthread)PThread.currentProxiedOperationCallerThread=worker.pthread.threadInfoStruct;if(d[\"targetThread\"]&&d[\"targetThread\"]!=_pthread_self()){var thread=PThread.pthreads[d.targetThread];if(thread){thread.worker.postMessage(e.data,d[\"transferList\"])}else{console.error('Internal error! Worker sent a message \"'+cmd+'\" to target pthread '+d[\"targetThread\"]+\", but that thread no longer exists!\")}PThread.currentProxiedOperationCallerThread=undefined;return}if(cmd===\"processQueuedMainThreadWork\"){_emscripten_main_thread_process_queued_calls()}else if(cmd===\"spawnThread\"){spawnThread(e.data)}else if(cmd===\"cleanupThread\"){cleanupThread(d[\"thread\"])}else if(cmd===\"killThread\"){killThread(d[\"thread\"])}else if(cmd===\"cancelThread\"){cancelThread(d[\"thread\"])}else if(cmd===\"loaded\"){worker.loaded=true;if(onFinishedLoading)onFinishedLoading(worker);if(worker.runPthread){worker.runPthread();delete worker.runPthread}}else if(cmd===\"print\"){out(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"printErr\"){err(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"alert\"){alert(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"exit\"){var detached=worker.pthread&&Atomics.load(GROWABLE_HEAP_U32(),worker.pthread.threadInfoStruct+64>>2);if(detached){PThread.returnWorkerToPool(worker)}}else if(cmd===\"exitProcess\"){try{exit(d[\"returnCode\"])}catch(e){if(e instanceof ExitStatus)return;throw e}}else if(cmd===\"cancelDone\"){PThread.returnWorkerToPool(worker)}else if(cmd===\"objectTransfer\"){PThread.receiveObjectTransfer(e.data)}else if(e.data.target===\"setimmediate\"){worker.postMessage(e.data)}else{err(\"worker sent an unknown command \"+cmd)}PThread.currentProxiedOperationCallerThread=undefined};worker.onerror=function(e){err(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)};if(ENVIRONMENT_IS_NODE){worker.on(\"message\",function(data){worker.onmessage({data:data})});worker.on(\"error\",function(data){worker.onerror(data)});worker.on(\"exit\",function(data){})}worker.postMessage({\"cmd\":\"load\",\"urlOrBlob\":Module[\"mainScriptUrlOrBlob\"]||_scriptDir,\"wasmMemory\":wasmMemory,\"wasmModule\":wasmModule})},allocateUnusedWorker:function(){var pthreadMainJs=locateFile(\"tfjs-backend-wasm-threaded-simd.worker.js\");PThread.unusedWorkers.push(new Worker(pthreadMainJs))},getNewWorker:function(){if(PThread.unusedWorkers.length==0){PThread.allocateUnusedWorker();PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0])}if(PThread.unusedWorkers.length>0)return PThread.unusedWorkers.pop();else return null},busySpinWait:function(msecs){var t=performance.now()+msecs;while(performance.now()<t){}}};function establishStackSpace(stackTop,stackMax){_emscripten_stack_set_limits(stackTop,stackMax);stackRestore(stackTop)}Module[\"establishStackSpace\"]=establishStackSpace;function getNoExitRuntime(){return noExitRuntime}Module[\"getNoExitRuntime\"]=getNoExitRuntime;function invokeEntryPoint(ptr,arg){return wasmTable.get(ptr)(arg)}Module[\"invokeEntryPoint\"]=invokeEntryPoint;function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}function ___call_main(argc,argv){var returnCode=_main(argc,argv)}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function(){var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6}}else if(ENVIRONMENT_IS_PTHREAD){_emscripten_get_now=function(){return performance.now()-Module[\"__performance_now_clock_drift\"]}}else if(typeof dateNow!==\"undefined\"){_emscripten_get_now=dateNow}else _emscripten_get_now=function(){return performance.now()};function setErrNo(value){GROWABLE_HEAP_I32()[___errno_location()>>2]=value;return value}function _atexit(func,arg){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(1,1,func,arg)}function __emscripten_notify_thread_queue(targetThreadId,mainThreadId){if(targetThreadId==mainThreadId){postMessage({\"cmd\":\"processQueuedMainThreadWork\"})}else if(ENVIRONMENT_IS_PTHREAD){postMessage({\"targetThread\":targetThreadId,\"cmd\":\"processThreadQueue\"})}else{var pthread=PThread.pthreads[targetThreadId];var worker=pthread&&pthread.worker;if(!worker){return}worker.postMessage({\"cmd\":\"processThreadQueue\"})}return 1}function _abort(){abort()}function _emscripten_asm_const_int(code,sigPtr,argbuf){var args=readAsmConstArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}function _emscripten_conditional_set_current_thread_status(expectedStatus,newStatus){}function _emscripten_futex_wait(addr,val,timeout){if(addr<=0||addr>GROWABLE_HEAP_I8().length||addr&3!=0)return-28;if(!ENVIRONMENT_IS_WEB){var ret=Atomics.wait(GROWABLE_HEAP_I32(),addr>>2,val,timeout);if(ret===\"timed-out\")return-73;if(ret===\"not-equal\")return-6;if(ret===\"ok\")return 0;throw\"Atomics.wait returned an unexpected value \"+ret}else{if(Atomics.load(GROWABLE_HEAP_I32(),addr>>2)!=val){return-6}var tNow=performance.now();var tEnd=tNow+timeout;var lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,addr);while(1){tNow=performance.now();if(tNow>tEnd){lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,0);return-73}lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,0);if(lastAddr==0){break}_emscripten_main_thread_process_queued_calls();if(Atomics.load(GROWABLE_HEAP_I32(),addr>>2)!=val){return-6}lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,addr)}return 0}}function _emscripten_memcpy_big(dest,src,num){GROWABLE_HEAP_U8().copyWithin(dest,src,src+num)}function _emscripten_num_logical_cores(){if(ENVIRONMENT_IS_NODE)return require(\"os\").cpus().length;return navigator[\"hardwareConcurrency\"]}function _emscripten_proxy_to_main_thread_js(index,sync){var numCallArgs=arguments.length-2;var stack=stackSave();var serializedNumCallArgs=numCallArgs;var args=stackAlloc(serializedNumCallArgs*8);var b=args>>3;for(var i=0;i<numCallArgs;i++){var arg=arguments[2+i];GROWABLE_HEAP_F64()[b+i]=arg}var ret=_emscripten_run_in_main_runtime_thread_js(index,serializedNumCallArgs,args,sync);stackRestore(stack);return ret}var _emscripten_receive_on_main_thread_js_callArgs=[];var readAsmConstArgsArray=[];function readAsmConstArgs(sigPtr,buf){readAsmConstArgsArray.length=0;var ch;buf>>=2;while(ch=GROWABLE_HEAP_U8()[sigPtr++]){var double=ch<105;if(double&&buf&1)buf++;readAsmConstArgsArray.push(double?GROWABLE_HEAP_F64()[buf++>>1]:GROWABLE_HEAP_I32()[buf]);++buf}return readAsmConstArgsArray}function _emscripten_receive_on_main_thread_js(index,numCallArgs,args){_emscripten_receive_on_main_thread_js_callArgs.length=numCallArgs;var b=args>>3;for(var i=0;i<numCallArgs;i++){_emscripten_receive_on_main_thread_js_callArgs[i]=GROWABLE_HEAP_F64()[b+i]}var isEmAsmConst=index<0;var func=!isEmAsmConst?proxiedFunctionTable[index]:ASM_CONSTS[-index-1];return func.apply(null,_emscripten_receive_on_main_thread_js_callArgs)}function _emscripten_get_heap_size(){return GROWABLE_HEAP_U8().length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();if(requestedSize<=oldSize){return false}var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var JSEvents={inEventHandler:0,removeAllEventListeners:function(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i)}JSEvents.eventHandlers=[];JSEvents.deferredCalls=[]},registerRemoveEventListeners:function(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push(JSEvents.removeAllEventListeners);JSEvents.removeEventListenersRegistered=true}},deferredCalls:[],deferCall:function(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false}return true}for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort(function(x,y){return x.precedence<y.precedence})},removeDeferredCalls:function(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i}}},canPerformEventHandlerRequests:function(){return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!JSEvents.canPerformEventHandlerRequests()){return}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(null,call.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--)}}},_removeHandler:function(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1)},registerOrRemoveHandler:function(eventHandler){var jsEventHandler=function jsEventHandler(event){++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;JSEvents.runDeferredCalls();eventHandler.handlerFunc(event);JSEvents.runDeferredCalls();--JSEvents.inEventHandler};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners()}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--)}}}},queueEventHandlerOnThread_iiii:function(targetThread,eventHandlerFunc,eventTypeId,eventData,userData){var stackTop=stackSave();var varargs=stackAlloc(12);GROWABLE_HEAP_I32()[varargs>>2]=eventTypeId;GROWABLE_HEAP_I32()[varargs+4>>2]=eventData;GROWABLE_HEAP_I32()[varargs+8>>2]=userData;__emscripten_call_on_thread(0,targetThread,637534208,eventHandlerFunc,eventData,varargs);stackRestore(stackTop)},getTargetThreadForEventCallback:function(targetThread){switch(targetThread){case 1:return 0;case 2:return PThread.currentProxiedOperationCallerThread;default:return targetThread}},getNodeNameForTarget:function(target){if(!target)return\"\";if(target==window)return\"#window\";if(target==screen)return\"#screen\";return target&&target.nodeName?target.nodeName:\"\"},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function stringToNewUTF8(jsString){var length=lengthBytesUTF8(jsString)+1;var cString=_malloc(length);stringToUTF8(jsString,cString,length);return cString}function _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height){var stackTop=stackSave();var varargs=stackAlloc(12);var targetCanvasPtr=0;if(targetCanvas){targetCanvasPtr=stringToNewUTF8(targetCanvas)}GROWABLE_HEAP_I32()[varargs>>2]=targetCanvasPtr;GROWABLE_HEAP_I32()[varargs+4>>2]=width;GROWABLE_HEAP_I32()[varargs+8>>2]=height;__emscripten_call_on_thread(0,targetThread,657457152,0,targetCanvasPtr,varargs);stackRestore(stackTop)}function _emscripten_set_offscreencanvas_size_on_target_thread(targetThread,targetCanvas,width,height){targetCanvas=targetCanvas?UTF8ToString(targetCanvas):\"\";_emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height)}function maybeCStringToJsString(cString){return cString>2?UTF8ToString(cString):cString}var specialHTMLTargets=[0,typeof document!==\"undefined\"?document:0,typeof window!==\"undefined\"?window:0];function findEventTarget(target){target=maybeCStringToJsString(target);var domElement=specialHTMLTargets[target]||(typeof document!==\"undefined\"?document.querySelector(target):undefined);return domElement}function findCanvasEventTarget(target){return findEventTarget(target)}function _emscripten_set_canvas_element_size_calling_thread(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;if(canvas.canvasSharedPtr){GROWABLE_HEAP_I32()[canvas.canvasSharedPtr>>2]=width;GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+4>>2]=height}if(canvas.offscreenCanvas||!canvas.controlTransferredOffscreen){if(canvas.offscreenCanvas)canvas=canvas.offscreenCanvas;var autoResizeViewport=false;if(canvas.GLctxObject&&canvas.GLctxObject.GLctx){var prevViewport=canvas.GLctxObject.GLctx.getParameter(2978);autoResizeViewport=prevViewport[0]===0&&prevViewport[1]===0&&prevViewport[2]===canvas.width&&prevViewport[3]===canvas.height}canvas.width=width;canvas.height=height;if(autoResizeViewport){canvas.GLctxObject.GLctx.viewport(0,0,width,height)}}else if(canvas.canvasSharedPtr){var targetThread=GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+8>>2];_emscripten_set_offscreencanvas_size_on_target_thread(targetThread,target,width,height);return 1}else{return-4}return 0}function _emscripten_set_canvas_element_size_main_thread(target,width,height){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(2,1,target,width,height);return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}function _emscripten_set_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(canvas){return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}else{return _emscripten_set_canvas_element_size_main_thread(target,width,height)}}function _emscripten_set_current_thread_status(newStatus){}function _emscripten_set_thread_name(threadId,name){}function __webgl_enable_ANGLE_instanced_arrays(ctx){var ext=ctx.getExtension(\"ANGLE_instanced_arrays\");if(ext){ctx[\"vertexAttribDivisor\"]=function(index,divisor){ext[\"vertexAttribDivisorANGLE\"](index,divisor)};ctx[\"drawArraysInstanced\"]=function(mode,first,count,primcount){ext[\"drawArraysInstancedANGLE\"](mode,first,count,primcount)};ctx[\"drawElementsInstanced\"]=function(mode,count,type,indices,primcount){ext[\"drawElementsInstancedANGLE\"](mode,count,type,indices,primcount)};return 1}}function __webgl_enable_OES_vertex_array_object(ctx){var ext=ctx.getExtension(\"OES_vertex_array_object\");if(ext){ctx[\"createVertexArray\"]=function(){return ext[\"createVertexArrayOES\"]()};ctx[\"deleteVertexArray\"]=function(vao){ext[\"deleteVertexArrayOES\"](vao)};ctx[\"bindVertexArray\"]=function(vao){ext[\"bindVertexArrayOES\"](vao)};ctx[\"isVertexArray\"]=function(vao){return ext[\"isVertexArrayOES\"](vao)};return 1}}function __webgl_enable_WEBGL_draw_buffers(ctx){var ext=ctx.getExtension(\"WEBGL_draw_buffers\");if(ext){ctx[\"drawBuffers\"]=function(n,bufs){ext[\"drawBuffersWEBGL\"](n,bufs)};return 1}}function __webgl_enable_WEBGL_multi_draw(ctx){return!!(ctx.multiDrawWebgl=ctx.getExtension(\"WEBGL_multi_draw\"))}var GL={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret},getSource:function(shader,count,string,length){var source=\"\";for(var i=0;i<count;++i){var len=length?GROWABLE_HEAP_I32()[length+i*4>>2]:-1;source+=UTF8ToString(GROWABLE_HEAP_I32()[string+i*4>>2],len<0?undefined:len)}return source},createContext:function(canvas,webGLContextAttributes){var ctx=canvas.getContext(\"webgl\",webGLContextAttributes);if(!ctx)return 0;var handle=GL.registerContext(ctx,webGLContextAttributes);return handle},registerContext:function(ctx,webGLContextAttributes){var handle=_malloc(8);GROWABLE_HEAP_I32()[handle+4>>2]=_pthread_self();var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes.majorVersion,GLctx:ctx};if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes.enableExtensionsByDefault===\"undefined\"||webGLContextAttributes.enableExtensionsByDefault){GL.initExtensions(context)}return handle},makeContextCurrent:function(contextHandle){GL.currentContext=GL.contexts[contextHandle];Module.ctx=GLctx=GL.currentContext&&GL.currentContext.GLctx;return!(contextHandle&&!GLctx)},getContext:function(contextHandle){return GL.contexts[contextHandle]},deleteContext:function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents===\"object\")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;_free(GL.contexts[contextHandle].handle);GL.contexts[contextHandle]=null},initExtensions:function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;__webgl_enable_ANGLE_instanced_arrays(GLctx);__webgl_enable_OES_vertex_array_object(GLctx);__webgl_enable_WEBGL_draw_buffers(GLctx);GLctx.disjointTimerQueryExt=GLctx.getExtension(\"EXT_disjoint_timer_query\");__webgl_enable_WEBGL_multi_draw(GLctx);var exts=GLctx.getSupportedExtensions()||[];exts.forEach(function(ext){if(ext.indexOf(\"lose_context\")<0&&ext.indexOf(\"debug\")<0){GLctx.getExtension(ext)}})},populateUniformTable:function(program){var p=GL.programs[program];var ptable=GL.programInfos[program]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1};var utable=ptable.uniforms;var numUniforms=GLctx.getProgramParameter(p,35718);for(var i=0;i<numUniforms;++i){var u=GLctx.getActiveUniform(p,i);var name=u.name;ptable.maxUniformLength=Math.max(ptable.maxUniformLength,name.length+1);if(name.slice(-1)==\"]\"){name=name.slice(0,name.lastIndexOf(\"[\"))}var loc=GLctx.getUniformLocation(p,name);if(loc){var id=GL.getNewId(GL.uniforms);utable[name]=[u.size,id];GL.uniforms[id]=loc;for(var j=1;j<u.size;++j){var n=name+\"[\"+j+\"]\";loc=GLctx.getUniformLocation(p,n);id=GL.getNewId(GL.uniforms);GL.uniforms[id]=loc}}}}};var __emscripten_webgl_power_preferences=[\"default\",\"low-power\",\"high-performance\"];function _emscripten_webgl_do_create_context(target,attributes){var a=attributes>>2;var powerPreference=GROWABLE_HEAP_I32()[a+(24>>2)];var contextAttributes={\"alpha\":!!GROWABLE_HEAP_I32()[a+(0>>2)],\"depth\":!!GROWABLE_HEAP_I32()[a+(4>>2)],\"stencil\":!!GROWABLE_HEAP_I32()[a+(8>>2)],\"antialias\":!!GROWABLE_HEAP_I32()[a+(12>>2)],\"premultipliedAlpha\":!!GROWABLE_HEAP_I32()[a+(16>>2)],\"preserveDrawingBuffer\":!!GROWABLE_HEAP_I32()[a+(20>>2)],\"powerPreference\":__emscripten_webgl_power_preferences[powerPreference],\"failIfMajorPerformanceCaveat\":!!GROWABLE_HEAP_I32()[a+(28>>2)],majorVersion:GROWABLE_HEAP_I32()[a+(32>>2)],minorVersion:GROWABLE_HEAP_I32()[a+(36>>2)],enableExtensionsByDefault:GROWABLE_HEAP_I32()[a+(40>>2)],explicitSwapControl:GROWABLE_HEAP_I32()[a+(44>>2)],proxyContextToMainThread:GROWABLE_HEAP_I32()[a+(48>>2)],renderViaOffscreenBackBuffer:GROWABLE_HEAP_I32()[a+(52>>2)]};var canvas=findCanvasEventTarget(target);if(!canvas){return 0}if(contextAttributes.explicitSwapControl){return 0}var contextHandle=GL.createContext(canvas,contextAttributes);return contextHandle}function _emscripten_webgl_create_context(a0,a1){return _emscripten_webgl_do_create_context(a0,a1)}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=GROWABLE_HEAP_I32()[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(3,1,fd);return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(4,1,fd,offset_low,offset_high,whence,newOffset)}function _fd_write(fd,iov,iovcnt,pnum){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(5,1,fd,iov,iovcnt,pnum);var num=0;for(var i=0;i<iovcnt;i++){var ptr=GROWABLE_HEAP_I32()[iov+i*8>>2];var len=GROWABLE_HEAP_I32()[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,GROWABLE_HEAP_U8()[ptr+j])}num+=len}GROWABLE_HEAP_I32()[pnum>>2]=num;return 0}function _pthread_cleanup_pop(execute){var routine=PThread.threadExitHandlers.pop();if(execute)routine()}function _pthread_cleanup_push(routine,arg){PThread.threadExitHandlers.push(function(){wasmTable.get(routine)(arg)})}function spawnThread(threadParams){if(ENVIRONMENT_IS_PTHREAD)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var worker=PThread.getNewWorker();if(worker.pthread!==undefined)throw\"Internal error!\";if(!threadParams.pthread_ptr)throw\"Internal error, no pthread ptr!\";PThread.runningWorkers.push(worker);var tlsMemory=_malloc(128*4);for(var i=0;i<128;++i){GROWABLE_HEAP_I32()[tlsMemory+i*4>>2]=0}var stackHigh=threadParams.stackBase+threadParams.stackSize;var pthread=PThread.pthreads[threadParams.pthread_ptr]={worker:worker,stackBase:threadParams.stackBase,stackSize:threadParams.stackSize,allocatedOwnStack:threadParams.allocatedOwnStack,threadInfoStruct:threadParams.pthread_ptr};var tis=pthread.threadInfoStruct>>2;Atomics.store(GROWABLE_HEAP_U32(),tis+(64>>2),threadParams.detached);Atomics.store(GROWABLE_HEAP_U32(),tis+(100>>2),tlsMemory);Atomics.store(GROWABLE_HEAP_U32(),tis+(40>>2),pthread.threadInfoStruct);Atomics.store(GROWABLE_HEAP_U32(),tis+(80>>2),threadParams.stackSize);Atomics.store(GROWABLE_HEAP_U32(),tis+(76>>2),stackHigh);Atomics.store(GROWABLE_HEAP_U32(),tis+(104>>2),threadParams.stackSize);Atomics.store(GROWABLE_HEAP_U32(),tis+(104+8>>2),stackHigh);Atomics.store(GROWABLE_HEAP_U32(),tis+(104+12>>2),threadParams.detached);var global_libc=_emscripten_get_global_libc();var global_locale=global_libc+40;Atomics.store(GROWABLE_HEAP_U32(),tis+(172>>2),global_locale);worker.pthread=pthread;var msg={\"cmd\":\"run\",\"start_routine\":threadParams.startRoutine,\"arg\":threadParams.arg,\"threadInfoStruct\":threadParams.pthread_ptr,\"stackBase\":threadParams.stackBase,\"stackSize\":threadParams.stackSize};worker.runPthread=function(){msg.time=performance.now();worker.postMessage(msg,threadParams.transferList)};if(worker.loaded){worker.runPthread();delete worker.runPthread}}function _pthread_create(pthread_ptr,attr,start_routine,arg){if(typeof SharedArrayBuffer===\"undefined\"){err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");return 6}if(!pthread_ptr){err(\"pthread_create called with a null thread pointer!\");return 28}var transferList=[];var error=0;if(ENVIRONMENT_IS_PTHREAD&&(transferList.length===0||error)){return _emscripten_sync_run_in_main_thread_4(687865856,pthread_ptr,attr,start_routine,arg)}if(error)return error;var stackSize=0;var stackBase=0;var detached=0;if(attr&&attr!=-1){stackSize=GROWABLE_HEAP_I32()[attr>>2];stackSize+=81920;stackBase=GROWABLE_HEAP_I32()[attr+8>>2];detached=GROWABLE_HEAP_I32()[attr+12>>2]!==0}else{stackSize=2097152}var allocatedOwnStack=stackBase==0;if(allocatedOwnStack){stackBase=_memalign(16,stackSize)}else{stackBase-=stackSize;assert(stackBase>0)}var threadInfoStruct=_malloc(228);for(var i=0;i<228>>2;++i)GROWABLE_HEAP_U32()[(threadInfoStruct>>2)+i]=0;GROWABLE_HEAP_I32()[pthread_ptr>>2]=threadInfoStruct;GROWABLE_HEAP_I32()[threadInfoStruct+12>>2]=threadInfoStruct;var headPtr=threadInfoStruct+152;GROWABLE_HEAP_I32()[headPtr>>2]=headPtr;var threadParams={stackBase:stackBase,stackSize:stackSize,allocatedOwnStack:allocatedOwnStack,detached:detached,startRoutine:start_routine,pthread_ptr:threadInfoStruct,arg:arg,transferList:transferList};if(ENVIRONMENT_IS_PTHREAD){threadParams.cmd=\"spawnThread\";postMessage(threadParams,transferList)}else{spawnThread(threadParams)}return 0}function _sysconf(name){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(6,1,name);switch(name){case 30:return 16384;case 85:var maxHeapSize=2147483648;return maxHeapSize/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator===\"object\")return navigator[\"hardwareConcurrency\"]||1;return 1}}setErrNo(28);return-1}if(!ENVIRONMENT_IS_PTHREAD)PThread.initMainThreadBlock();var GLctx;var proxiedFunctionTable=[null,_atexit,_emscripten_set_canvas_element_size_main_thread,_fd_close,_fd_seek,_fd_write,_sysconf];var asmLibraryArg={\"e\":___assert_fail,\"r\":___call_main,\"x\":__emscripten_notify_thread_queue,\"b\":_abort,\"y\":_emscripten_asm_const_int,\"j\":_emscripten_conditional_set_current_thread_status,\"c\":_emscripten_futex_wait,\"d\":_emscripten_futex_wake,\"f\":_emscripten_get_now,\"p\":_emscripten_memcpy_big,\"z\":_emscripten_num_logical_cores,\"u\":_emscripten_receive_on_main_thread_js,\"q\":_emscripten_resize_heap,\"v\":_emscripten_set_canvas_element_size,\"i\":_emscripten_set_current_thread_status,\"t\":_emscripten_set_thread_name,\"w\":_emscripten_webgl_create_context,\"m\":_fd_close,\"n\":_fd_seek,\"g\":_fd_write,\"o\":initPthreadsJS,\"a\":wasmMemory||Module[\"wasmMemory\"],\"k\":_pthread_cleanup_pop,\"l\":_pthread_cleanup_push,\"h\":_pthread_create,\"s\":_sysconf};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"ga\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"ha\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"ia\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"ja\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"ka\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"la\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"ma\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"na\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"oa\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"pa\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"qa\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"ra\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"sa\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"ta\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"ua\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"va\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"wa\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"xa\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"ya\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"za\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Aa\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"Ba\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Ca\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"Da\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"Ea\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Fa\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"Ga\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Ha\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"Ia\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"Ja\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"Ka\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"La\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Ma\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Na\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Oa\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Pa\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"Qa\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Ra\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"Sa\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Ta\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Ua\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Va\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Wa\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"Xa\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Ya\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"Za\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"_a\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"$a\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"ab\"]).apply(null,arguments)};var _emscripten_get_global_libc=Module[\"_emscripten_get_global_libc\"]=function(){return(_emscripten_get_global_libc=Module[\"_emscripten_get_global_libc\"]=Module[\"asm\"][\"bb\"]).apply(null,arguments)};var _pthread_self=Module[\"_pthread_self\"]=function(){return(_pthread_self=Module[\"_pthread_self\"]=Module[\"asm\"][\"cb\"]).apply(null,arguments)};var ___pthread_tsd_run_dtors=Module[\"___pthread_tsd_run_dtors\"]=function(){return(___pthread_tsd_run_dtors=Module[\"___pthread_tsd_run_dtors\"]=Module[\"asm\"][\"db\"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=function(){return(_emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=Module[\"asm\"][\"eb\"]).apply(null,arguments)};var _emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=function(){return(_emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=Module[\"asm\"][\"fb\"]).apply(null,arguments)};var _emscripten_register_main_browser_thread_id=Module[\"_emscripten_register_main_browser_thread_id\"]=function(){return(_emscripten_register_main_browser_thread_id=Module[\"_emscripten_register_main_browser_thread_id\"]=Module[\"asm\"][\"gb\"]).apply(null,arguments)};var __emscripten_do_dispatch_to_thread=Module[\"__emscripten_do_dispatch_to_thread\"]=function(){return(__emscripten_do_dispatch_to_thread=Module[\"__emscripten_do_dispatch_to_thread\"]=Module[\"asm\"][\"hb\"]).apply(null,arguments)};var _emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=function(){return(_emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=Module[\"asm\"][\"ib\"]).apply(null,arguments)};var _emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=function(){return(_emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=Module[\"asm\"][\"jb\"]).apply(null,arguments)};var __emscripten_call_on_thread=Module[\"__emscripten_call_on_thread\"]=function(){return(__emscripten_call_on_thread=Module[\"__emscripten_call_on_thread\"]=Module[\"asm\"][\"kb\"]).apply(null,arguments)};var _emscripten_tls_init=Module[\"_emscripten_tls_init\"]=function(){return(_emscripten_tls_init=Module[\"_emscripten_tls_init\"]=Module[\"asm\"][\"lb\"]).apply(null,arguments)};var __emscripten_thread_init=Module[\"__emscripten_thread_init\"]=function(){return(__emscripten_thread_init=Module[\"__emscripten_thread_init\"]=Module[\"asm\"][\"mb\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"nb\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"ob\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"pb\"]).apply(null,arguments)};var _emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=function(){return(_emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=Module[\"asm\"][\"qb\"]).apply(null,arguments)};var _memalign=Module[\"_memalign\"]=function(){return(_memalign=Module[\"_memalign\"]=Module[\"asm\"][\"rb\"]).apply(null,arguments)};var __emscripten_allow_main_runtime_queued_calls=Module[\"__emscripten_allow_main_runtime_queued_calls\"]=9880;var __emscripten_main_thread_futex=Module[\"__emscripten_main_thread_futex\"]=11368;Module[\"cwrap\"]=cwrap;Module[\"PThread\"]=PThread;Module[\"PThread\"]=PThread;Module[\"wasmMemory\"]=wasmMemory;Module[\"ExitStatus\"]=ExitStatus;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}if(ENVIRONMENT_IS_PTHREAD){readyPromiseResolve(Module);postMessage({\"cmd\":\"loaded\"});return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){if(implicit&&noExitRuntime&&status===0){return}if(!implicit){if(ENVIRONMENT_IS_PTHREAD){postMessage({\"cmd\":\"exitProcess\",\"returnCode\":status});throw new ExitStatus(status)}else{}}if(noExitRuntime){}else{PThread.terminateAllThreads();EXITSTATUS=status;exitRuntime();if(Module[\"onExit\"])Module[\"onExit\"](status);ABORT=true}quit_(status,new ExitStatus(status))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}if(ENVIRONMENT_IS_PTHREAD){noExitRuntime=false;PThread.initWorker()}run();\n\n\n  return WasmBackendModuleThreadedSimd.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModuleThreadedSimd;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModuleThreadedSimd; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModuleThreadedSimd\"] = WasmBackendModuleThreadedSimd;\n","\nvar WasmBackendModule = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!==\"undefined\"?WasmBackendModule:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;__ATINIT__.push({func:function(){___wasm_call_ctors()}});function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix)}var fileURIPrefix=\"file://\";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix)}var wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"g\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"m\"];removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function _abort(){abort()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function _emscripten_get_heap_size(){return HEAPU8.length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}var asmLibraryArg={\"a\":_abort,\"d\":_emscripten_memcpy_big,\"e\":_emscripten_resize_heap,\"f\":_fd_close,\"c\":_fd_seek,\"b\":_fd_write};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"h\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"i\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"j\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"k\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"l\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"n\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"o\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"p\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"q\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"r\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"s\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"t\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"u\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"v\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"w\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"x\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"y\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"z\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"F\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"ga\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"ha\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"ia\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"ja\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"ka\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"la\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"ma\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"na\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"oa\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"pa\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"qa\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"ra\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"sa\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"ta\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"ua\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"va\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"wa\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"xa\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"ya\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"za\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Aa\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Ba\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Ca\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Da\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"Ea\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Fa\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"Ga\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"Ha\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"Ia\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"Ja\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"Ka\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"La\"]).apply(null,arguments)};Module[\"cwrap\"]=cwrap;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return WasmBackendModule.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModule;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModule; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModule\"] = WasmBackendModule;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_wasm';\n\nimport {backend_util, BackendTimingInfo, DataStorage, DataType, deprecationWarn, engine, env, KernelBackend, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasmModule, WasmFactoryConfig} from '../wasm-out/tfjs-backend-wasm';\nimport wasmFactoryThreadedSimd from '../wasm-out/tfjs-backend-wasm-threaded-simd.js';\n// @ts-ignore\nimport {wasmWorkerContents} from '../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js';\nimport wasmFactory from '../wasm-out/tfjs-backend-wasm.js';\n\ninterface TensorData {\n  id: number;\n  memoryOffset: number;\n  shape: number[];\n  dtype: DataType;\n  refCount: number;\n  /** Only used for string tensors, storing encoded bytes. */\n  stringBytes?: Uint8Array[];\n}\n\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\nexport class BackendWasm extends KernelBackend {\n  // 0 is reserved for null data ids.\n  private dataIdNextNumber = 1;\n  dataIdMap: DataStorage<TensorData>;\n\n  constructor(public wasm: BackendWasmModule) {\n    super();\n    this.wasm.tfjs.init();\n    this.dataIdMap = new DataStorage(this, engine());\n  }\n\n  write(values: backend_util.BackendValues, shape: number[], dtype: DataType):\n      DataId {\n    const dataId = {id: this.dataIdNextNumber++};\n    this.move(dataId, values, shape, dtype, 1);\n    return dataId;\n  }\n\n  numDataIds(): number {\n    return this.dataIdMap.numDataIds();\n  }\n\n  async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {kernelMs};\n  }\n\n  move(\n      dataId: DataId, values: backend_util.BackendValues, shape: number[],\n      dtype: DataType, refCount: number): void {\n    const id = this.dataIdNextNumber++;\n    if (dtype === 'string') {\n      const stringBytes = values as Uint8Array[];\n      this.dataIdMap.set(\n          dataId,\n          {id, stringBytes, shape, dtype, memoryOffset: null, refCount});\n      return;\n    }\n\n    const size = util.sizeFromShape(shape);\n    const numBytes = size * util.bytesPerElement(dtype);\n    const memoryOffset = this.wasm._malloc(numBytes);\n\n    this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount});\n\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n\n    if (values != null) {\n      this.wasm.HEAPU8.set(\n          new Uint8Array(\n              (values as backend_util.TypedArray).buffer,\n              (values as backend_util.TypedArray).byteOffset, numBytes),\n          memoryOffset);\n    }\n  }\n\n  async read(dataId: DataId): Promise<backend_util.BackendValues> {\n    return this.readSync(dataId);\n  }\n\n  readSync(dataId: DataId): backend_util.BackendValues {\n    const {memoryOffset, dtype, shape, stringBytes} =\n        this.dataIdMap.get(dataId);\n    if (dtype === 'string') {\n      return stringBytes;\n    }\n    const bytes = this.wasm.HEAPU8.slice(\n        memoryOffset,\n        memoryOffset + util.sizeFromShape(shape) * util.bytesPerElement(dtype));\n    return typedArrayFromBuffer(bytes.buffer, dtype);\n  }\n\n  /**\n   * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n   * is released, false otherwise.\n   * @param dataId\n   * @oaram force Optional, remove the data regardless of refCount\n   */\n  disposeData(dataId: DataId, force = false): boolean {\n    if (this.dataIdMap.has(dataId)) {\n      const data = this.dataIdMap.get(dataId);\n      data.refCount--;\n      if (!force && data.refCount > 0) {\n        return false;\n      }\n\n      this.wasm._free(data.memoryOffset);\n      this.wasm.tfjs.disposeData(data.id);\n      this.dataIdMap.delete(dataId);\n    }\n    return true;\n  }\n\n  /** Return refCount of a `TensorData`. */\n  refCount(dataId: DataId): number {\n    if (this.dataIdMap.has(dataId)) {\n      const tensorData = this.dataIdMap.get(dataId);\n      return tensorData.refCount;\n    }\n    return 0;\n  }\n\n  incRef(dataId: DataId) {\n    const data = this.dataIdMap.get(dataId);\n    if (data != null) {\n      data.refCount++;\n    }\n  }\n\n  floatPrecision(): 32 {\n    return 32;\n  }\n\n  // Returns the memory offset of a tensor. Useful for debugging and unit\n  // testing.\n  getMemoryOffset(dataId: DataId): number {\n    return this.dataIdMap.get(dataId).memoryOffset;\n  }\n\n  dispose() {\n    this.wasm.tfjs.dispose();\n    this.wasm = null;\n  }\n\n  memory() {\n    return {unreliable: false};\n  }\n\n  /**\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\n   * is present, the memory was allocated elsewhere (in c++) and we just record\n   * the pointer where that memory lives.\n   */\n  makeOutput(shape: number[], dtype: DataType, memoryOffset?: number):\n      TensorInfo {\n    let dataId: {};\n    if (memoryOffset == null) {\n      dataId = this.write(null /* values */, shape, dtype);\n    } else {\n      const id = this.dataIdNextNumber++;\n      dataId = {id};\n      this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount: 1});\n      const size = util.sizeFromShape(shape);\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    }\n    return {dataId, shape, dtype};\n  }\n\n  typedArrayFromHeap({shape, dtype, dataId}: TensorInfo):\n      backend_util.TypedArray {\n    const buffer = this.wasm.HEAPU8.buffer;\n    const {memoryOffset} = this.dataIdMap.get(dataId);\n    const size = util.sizeFromShape(shape);\n    switch (dtype) {\n      case 'float32':\n        return new Float32Array(buffer, memoryOffset, size);\n      case 'int32':\n        return new Int32Array(buffer, memoryOffset, size);\n      case 'bool':\n        return new Uint8Array(buffer, memoryOffset, size);\n      default:\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n  }\n}\n\nfunction createInstantiateWasmFunc(path: string) {\n  // tslint:disable-next-line:no-any\n  return (imports: any, callback: any) => {\n    util.fetch(path, {credentials: 'same-origin'}).then((response) => {\n      if (!response['ok']) {\n        imports.env.a(`failed to load wasm binary file at '${path}'`);\n      }\n      response.arrayBuffer().then(binary => {\n        WebAssembly.instantiate(binary, imports).then(output => {\n          callback(output.instance);\n        });\n      });\n    });\n    return {};\n  };\n}\n\n/**\n * Returns the path of the WASM binary.\n * @param simdSupported whether SIMD is supported\n * @param threadsSupported whether multithreading is supported\n * @param wasmModuleFolder the directory containing the WASM binaries.\n */\nfunction getPathToWasmBinary(\n    simdSupported: boolean, threadsSupported: boolean,\n    wasmModuleFolder: string) {\n  if (wasmPath != null) {\n    // If wasmPath is defined, the user has supplied a full path to\n    // the vanilla .wasm binary.\n    return wasmPath;\n  }\n\n  let path: WasmBinaryName = 'tfjs-backend-wasm.wasm';\n  if (simdSupported && threadsSupported) {\n    path = 'tfjs-backend-wasm-threaded-simd.wasm';\n  } else if (simdSupported) {\n    path = 'tfjs-backend-wasm-simd.wasm';\n  }\n\n  if (wasmFileMap != null) {\n    if (wasmFileMap[path] != null) {\n      return wasmFileMap[path];\n    }\n  }\n\n  return wasmModuleFolder + path;\n}\n\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\n * in Chrome 76).\n */\nexport async function init(): Promise<{wasm: BackendWasmModule}> {\n  const [simdSupported, threadsSupported] = await Promise.all([\n    env().getAsync('WASM_HAS_SIMD_SUPPORT'),\n    env().getAsync('WASM_HAS_MULTITHREAD_SUPPORT')\n  ]);\n\n  return new Promise((resolve, reject) => {\n    const factoryConfig: WasmFactoryConfig = {};\n\n    /**\n     * This function overrides the Emscripten module locateFile utility.\n     * @param path The relative path to the file that needs to be loaded.\n     * @param prefix The path to the main JavaScript file's directory.\n     */\n    factoryConfig.locateFile = (path, prefix) => {\n      if (path.endsWith('.worker.js')) {\n        const response = wasmWorkerContents;\n        const blob = new Blob([response], {type: 'application/javascript'});\n        return URL.createObjectURL(blob);\n      }\n\n      if (path.endsWith('.wasm')) {\n        return getPathToWasmBinary(\n            simdSupported as boolean, threadsSupported as boolean,\n            wasmPathPrefix != null ? wasmPathPrefix : prefix);\n      }\n      return prefix + path;\n    };\n\n    // Use the instantiateWasm override when system fetch is not available.\n    // Reference:\n    // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\n    if (customFetch) {\n      factoryConfig.instantiateWasm =\n          createInstantiateWasmFunc(getPathToWasmBinary(\n              simdSupported as boolean, threadsSupported as boolean,\n              wasmPathPrefix != null ? wasmPathPrefix : ''));\n    }\n\n    let initialized = false;\n    factoryConfig.onAbort = () => {\n      if (initialized) {\n        // Emscripten already called console.warn so no need to double log.\n        return;\n      }\n      if (initAborted) {\n        // Emscripten calls `onAbort` twice, resulting in double error\n        // messages.\n        return;\n      }\n      initAborted = true;\n      const rejectMsg =\n          'Make sure the server can serve the `.wasm` file relative to the ' +\n          'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n      reject({message: rejectMsg});\n    };\n\n    let wasm: Promise<BackendWasmModule>;\n    // If `wasmPath` has been defined we must initialize the vanilla module.\n    if (threadsSupported && simdSupported && wasmPath == null) {\n      factoryConfig.mainScriptUrlOrBlob = new Blob(\n          [`var WasmBackendModuleThreadedSimd = ` +\n           wasmFactoryThreadedSimd.toString()],\n          {type: 'text/javascript'});\n      wasm = wasmFactoryThreadedSimd(factoryConfig);\n    } else {\n      // The wasmFactory works for both vanilla and SIMD binaries.\n      wasm = wasmFactory(factoryConfig);\n    }\n\n    // The WASM module has been successfully created by the factory.\n    // Any error will be caught by the onAbort callback defined above.\n    wasm.then((module) => {\n      initialized = true;\n      initAborted = false;\n\n      const voidReturnType: string = null;\n      // Using the tfjs namespace to avoid conflict with emscripten's API.\n      module.tfjs = {\n        init: module.cwrap('init', null, []),\n        registerTensor: module.cwrap(\n            'register_tensor', null,\n            [\n              'number',  // id\n              'number',  // size\n              'number',  // memoryOffset\n            ]),\n        disposeData: module.cwrap('dispose_data', voidReturnType, ['number']),\n        dispose: module.cwrap('dispose', voidReturnType, []),\n      };\n\n      resolve({wasm: module});\n    });\n  });\n}\n\nfunction typedArrayFromBuffer(\n    buffer: ArrayBuffer, dtype: DataType): backend_util.TypedArray {\n  switch (dtype) {\n    case 'float32':\n      return new Float32Array(buffer);\n    case 'int32':\n      return new Int32Array(buffer);\n    case 'bool':\n      return new Uint8Array(buffer);\n    default:\n      throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\nconst wasmBinaryNames = [\n  'tfjs-backend-wasm.wasm', 'tfjs-backend-wasm-simd.wasm',\n  'tfjs-backend-wasm-threaded-simd.wasm'\n] as const ;\ntype WasmBinaryName = typeof wasmBinaryNames[number];\n\nlet wasmPath: string = null;\nlet wasmPathPrefix: string = null;\nlet wasmFileMap: {[key in WasmBinaryName]?: string} = {};\nlet initAborted = false;\nlet customFetch = false;\n\n/**\n * @deprecated Use `setWasmPaths` instead.\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n * @param path wasm file path or url\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPath(path: string, usePlatformFetch = false): void {\n  deprecationWarn(\n      'setWasmPath has been deprecated in favor of setWasmPaths and' +\n      ' will be removed in a future release.');\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n  }\n  wasmPath = path;\n  customFetch = usePlatformFetch;\n}\n\n/**\n * Configures the locations of the WASM binaries.\n *\n * ```js\n * setWasmPaths({\n *  'tfjs-backend-wasm.wasm': 'renamed.wasm',\n *  'tfjs-backend-wasm-simd.wasm': 'renamed-simd.wasm',\n *  'tfjs-backend-wasm-threaded-simd.wasm': 'renamed-threaded-simd.wasm'\n * });\n * tf.setBackend('wasm');\n * ```\n *\n * @param prefixOrFileMap This can be either a string or object:\n *  - (string) The path to the directory where the WASM binaries are located.\n *     Note that this prefix will be used to load each binary (vanilla,\n *     SIMD-enabled, threading-enabled, etc.).\n *  - (object) Mapping from names of WASM binaries to custom\n *     full paths specifying the locations of those binaries. This is useful if\n *     your WASM binaries are not all located in the same directory, or if your\n *     WASM binaries have been renamed.\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPaths(\n    prefixOrFileMap: string|{[key in WasmBinaryName]?: string},\n    usePlatformFetch = false): void {\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPaths()` before you call `tf.setBackend()` or ' +\n        '`tf.ready()`');\n  }\n\n  if (typeof prefixOrFileMap === 'string') {\n    wasmPathPrefix = prefixOrFileMap;\n  } else {\n    wasmFileMap = prefixOrFileMap;\n    const missingPaths =\n        wasmBinaryNames.filter(name => wasmFileMap[name] == null);\n    if (missingPaths.length > 0) {\n      throw new Error(\n          `There were no entries found for the following binaries: ` +\n          `${missingPaths.join(',')}. Please either call setWasmPaths with a ` +\n          `map providing a path for each binary, or with a string indicating ` +\n          `the directory where all the binaries can be found.`);\n    }\n  }\n\n  customFetch = usePlatformFetch;\n}\n\n/** Used in unit tests. */\nexport function resetWasmPath(): void {\n  wasmPath = null;\n  wasmPathPrefix = null;\n  wasmFileMap = {};\n  customFetch = false;\n  initAborted = false;\n}\n","export const wasmWorkerContents = 'var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(\" \");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:text,threadId:Module[\"_pthread_self\"]()})}var err=threadPrintErr;this.alert=threadAlert;Module[\"instantiateWasm\"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module[\"wasmModule\"],info);Module[\"wasmModule\"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd===\"load\"){Module[\"wasmModule\"]=e.data.wasmModule;Module[\"wasmMemory\"]=e.data.wasmMemory;Module[\"buffer\"]=Module[\"wasmMemory\"].buffer;Module[\"ENVIRONMENT_IS_PTHREAD\"]=true;if(typeof e.data.urlOrBlob===\"string\"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd===\"objectTransfer\"){Module[\"PThread\"].receiveObjectTransfer(e.data)}else if(e.data.cmd===\"run\"){Module[\"__performance_now_clock_drift\"]=performance.now()-e.data.time;Module[\"__emscripten_thread_init\"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module[\"establishStackSpace\"](top,max);Module[\"_emscripten_tls_init\"]();Module[\"PThread\"].receiveObjectTransfer(e.data);Module[\"PThread\"].setThreadStatus(Module[\"_pthread_self\"](),1);try{var result=Module[\"invokeEntryPoint\"](e.data.start_routine,e.data.arg);if(!Module[\"getNoExitRuntime\"]())Module[\"PThread\"].threadExit(result)}catch(ex){if(ex===\"Canceled!\"){Module[\"PThread\"].threadCancel()}else if(ex!=\"unwind\"){if(ex instanceof Module[\"ExitStatus\"]){if(Module[\"getNoExitRuntime\"]()){}else{Module[\"PThread\"].threadExit(ex.status)}}else{Module[\"PThread\"].threadExit(-2);throw ex}}}}else if(e.data.cmd===\"cancel\"){if(Module[\"_pthread_self\"]()){Module[\"PThread\"].threadCancel()}}else if(e.data.target===\"setimmediate\"){}else if(e.data.cmd===\"processThreadQueue\"){if(Module[\"_pthread_self\"]()){Module[\"_emscripten_current_thread_process_queued_calls\"]()}}else{err(\"worker.js received unknown command \"+e.data.cmd);err(e.data)}}catch(ex){err(\"worker.js onmessage() captured an uncaught exception: \"+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require(\"worker_threads\");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",function(data){onmessage({data:data})});var nodeFS=require(\"fs\");var nodeRead=function(filename){return nodeFS.readFileSync(filename,\"utf8\")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance===\"undefined\"){performance={now:function(){return Date.now()}}}}';","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '3.3.0';\nexport {version};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport './flags_wasm';\n\nimport {registerBackend} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm, init} from './backend_wasm';\n\nexport {BackendWasm, setWasmPath, setWasmPaths} from './backend_wasm';\nexport {version as version_wasm} from './version';\n\nconst WASM_PRIORITY = 2;\nregisterBackend('wasm', async () => {\n  const {wasm} = await init();\n  return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n"],"names":["CppDType","FusableActivation","wasmFusedMatMul","fusedMatMulConfig","kernelName","_FusedMatMul","backendName","setupFunc","backend","wasm","cwrap","kernelFunc","args","inputs","attrs","a","b","bias","preluActivationWeights","dtype","Error","transposeA","transposeB","activation","leakyreluAlpha","aId","dataIdMap","get","dataId","id","bId","biasId","biasData","shape","length","preluActivationWeightsId","fusedActivation","leftDim","rightDim","batchDim","out","makeOutput","outId","aShapeBytes","Uint8Array","Int32Array","buffer","bShapeBytes","createUnaryKernelConfig","wasmFunc","x","xId","util","sizeFromShape","absConfig","Abs","createBinaryKernelConfig","supportsFullBroadcast","outputType","newShape","backend_util","assertAndGetBroadcastShape","aBroadcastDims","getBroadcastDims","bBroadcastDims","loopsOverAllOfA","every","v","i","loopsOverAllOfB","addConfig","Add","addNConfig","AddN","inputIds","map","inputIdsBytes","identity","inVals","typedArrayFromHeap","set","identityConfig","Identity","wasmTranspose","transpose","reducedShape","perm","newPerm","push","minValIdx","j","removeOneSizeDims","permIsNoOp","outShape","inShape","Array","computeOutShape","cloned","permBytes","xShapeBytes","transposeConfig","Transpose","permuteAxesAndTranspose","axis","xShape","xRank","originalAxes","parseAxisParam","axes","permutedAxes","getAxesPermutation","xTransposed","inputWasTransposed","getInnerMostAxes","transposed","argMaxConfig","ArgMax","inputId","input","transposedId","slice","outerSize","innerSize","disposeData","wasmAvgPool","avgPoolConfig","AvgPool","filterSize","strides","pad","dimRoundingMode","convInfo","computePool2DInfo","filterHeight","filterWidth","padTop","padInfo","top","padRight","right","padBottom","bottom","padLeft","left","strideHeight","strideWidth","channels","inChannels","dataFormat","dilationWidth","dilationHeight","reshape","xSize","$shape","inferFromImplicitShape","assert","incRef","reshapeConfig","Reshape","wasmBatchMatMul","batchMatMulConfig","BatchMatMul","aRank","bRank","innerShapeA","innerShapeB","outerShapeA","outerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","batchDimsCompatible","concat","b3dShape","a3d","b3d","a3dId","b3dId","Math","max","cast","castConfig","Cast","ceilConfig","Ceil","wasmClip","clipByValueConfig","ClipByValue","clipValueMin","clipValueMax","sliceImpl","vals","begin","size","isContinous","slice_util","isSliceContinous","xStrides","computeStrides","flatOffset","computeFlatOffset","subarray","decodedData","fromUint8ToStringArray","inBuf","outBuf","outLoc","indexToLoc","inLoc","idx","fromStringArrayToUint8","values","t","$inputs","filter","shapes","assertParamsConsistent","inputs2D","inputsValShapes","readSync","simplyConcat","outVals","getArrayFromDType","offset","forEach","colOffset","tIdx","row","resIdx","col","concatImplCPU","finalOutShape","stringBytes","sumInnerDims","innerDims","innerDim","outOffset","inOffset","concatConfig","Concat","wasmConv2d","conv2DConfig","Conv2D","filterId","dilations","$dataFormat","convertConv2DDataFormat","computeConv2DInfo","inputChannels","outputChannels","outChannels","isSamePad","type","wasmConv2DBackpropInput","conv2DBackpropInputConfig","Conv2DBackpropInput","dy","inputShape","batchSize","inHeight","inWidth","outHeight","outWidth","topPad","leftPad","isChannelsLast","dxStrides","dyStrides","fltS0","fltS1","fltS2","xBatchStride","xRowStride","xColStride","xChannelStride","yBatchStride","yRowStride","yColStride","yChannelStride","dyId","cosConfig","Cos","InterpolationMethod","wasmCropAndResize","cropAndResizeConfig","CropAndResize","method","extrapolationValue","cropSize","image","boxes","boxInd","numBoxes","cropHeight","cropWidth","castedData","imagesData","imagesId","boxesId","boxIndId","imagesShapeBytes","wasmCumsum","cumsumConfig","Cumsum","exclusive","reverse","permutation","permutedX","permutedAxis","assertAxesAreInnerMostDims","permutedOut","finalDim","permutedXId","permutedOutId","getUndoAxesPermutation","wasmDepthToSpace","depthToSpaceConfig","DepthToSpace","blockSize","inputHeight","inputWidth","inputDepth","outputHeight","outputWidth","outputDepth","outputShape","xStridesBytes","outputShapeBytes","outStridesBytes","wasmDepthwiseConv2d","depthwiseConv2dNativeConfig","DepthwiseConv2dNative","$dilations","equalConfig","Equal","expConfig","Exp","expandDims","dim","inputRank","$dim","splice","expandDimsConfig","ExpandDims","fillConfig","Fill","value","fill","wasmFlipLeftRight","flipLeftRightConfig","FlipLeftRight","imageId","batch","imageHeight","imageWidth","numChannels","floorConfig","Floor","floorDivConfig","FloorDiv","wasmBatchNorm","fusedBatchNormConfig","FusedBatchNorm","varianceEpsilon","mean","variance","scale","meanId","varianceId","offsetId","scaleId","wasmFusedConv2d","fusedConv2DConfig","FusedConv2D","wasmFusedDepthwiseConv2d","fusedDepthwiseConv2DConfig","FusedDepthwiseConv2D","wasmGatherNd","gatherNdConfig","GatherNd","params","indices","resultShape","numSlices","sliceSize","gather_util","prepareAndValidate","indicesShape","sliceRank","indicesId","stridesBytes","wasmGather","gatherV2Config","GatherV2","batchDims","parsedAxis","shapeInfo","segment_util","collectGatherOpShapeInfo","flattenX","dimSize","indicesSize","flattenIndex","flattenOutputShape","stridesSize","greaterConfig","Greater","greaterEqualConfig","GreaterEqual","leakyReluConfig","LeakyRelu","alpha","lessConfig","Less","lessEqualConfig","LessEqual","logConfig","Log","logicalAndConfig","LogicalAnd","wasmMax","maxConfig","Max","reductionIndices","keepDims","reduceShape","computeOutAndReduceShapes","reduceSize","expandShapeToKeepDim","maximumConfig","Maximum","wasmMaxPool","maxPoolConfig","MaxPool","wasmMean","meanConfig","Mean","reductionAxes","castedInput","wasmMin","minConfig","Min","minimumConfig","Minimum","multiplyConfig","Multiply","negConfig","Neg","parseResultStruct","resOffset","result","HEAPU8","pSelectedIndices","selectedSize","pSelectedScores","pValidOutputs","_free","nonMaxSuppressionV3Config","NonMaxSuppressionV3","iouThreshold","maxOutputSize","scoreThreshold","scores","scoresId","nonMaxSuppressionV4Config","NonMaxSuppressionV4","padToMaxOutputSize","nonMaxSuppressionV5Config","NonMaxSuppressionV5","softNmsSigma","notEqualConfig","NotEqual","wasmOneHot","oneHotConfig","OneHot","depth","onValue","offValue","onesLikeConfig","OnesLike","packConfig","Pack","assertShapesMatch","intermediateTensorInfos","expandedT","wasmPadV2","padV2Config","PadV2","paddings","constantValue","p","prePaddingsFlat","padTuple","postPaddingsFlat","prePaddingsBytes","postPaddingsBytes","powConfig","Pow","wasmPrelu","preluConfig","Prelu","weightsId","wasmProd","prodConfig","Prod","rangeConfig","Range","start","stop","step","makeZerosTypedArray","numElements","abs","ceil","rangeImplCPU","realDivConfig","RealDiv","reluConfig","Relu","relu6Config","Relu6","wasmResizeBilinear","resizeBilinearConfig","ResizeBilinear","images","alignCorners","halfPixelCenters","newHeight","newWidth","oldHeight","oldWidth","xData","wasmReverse","reverseConfig","Reverse","dims","axesBytes","outShapeBytes","reshaped","wasmRotate","rotateWithOffsetConfig","RotateWithOffset","radians","fillValue","center","centerX","centerY","getImageCenter","fillValues","fillBytes","roundConfig","Round","wasmScatterNd","wasmSelect","begin_","size_","parseSliceParams","xVals","outData","res","sliceImplCPU","rank","xStride","beginI","beginJ","endI","xOffset","slice2d","xStride1","xStride2","beginK","endJ","slice3d","xStride3","endK","beginL","k","slice4d","wasmStep","wasmStridedSlice","wasmSum","wasmTile","wasmTopK","kernelConfigs","Rsqrt","ScatterNd","updates","numUpdates","outputSize","scatter_util","calculateShapes","updatesId","Select","condition","e","conditionId","tId","eId","cRank","tRank","Sigmoid","Sin","Slice","Softmax","logits","SplitV","numOrSizeSplits","$axis","splitSizes","prepareSplitSize","s","xSliceSize","xSlice","Sqrt","Square","SquaredDifference","Step","StridedSlice","end","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","ellipsisAxes","maskToAxes","numInterpolatedAxes","expandAxes","xReshaped","normalizedBegin","normalizedEnd","normalizedStrides","getNormalizedAxes","shrinkAxes","_","indexOf","xSliced","some","beginBytes","endBytes","Sub","Sum","Tanh","Tile","reps","newShapeBytes","TopK","sorted","outValues","outValuesId","outIndices","outIndicesId","Unpack","numOutputs","outIndex","outs","ZerosLike","kernelConfig","registerKernel","ENV","env","registerFlag","async","WebAssembly","validate","MessageChannel","port1","postMessage","SharedArrayBuffer","_scriptDir","WasmBackendModuleThreadedSimd","document","currentScript","src","undefined","__filename","GROWABLE_HEAP_I8","wasmMemory","updateGlobalBufferAndViews","HEAP8","GROWABLE_HEAP_U8","GROWABLE_HEAP_I32","HEAP32","GROWABLE_HEAP_U32","HEAPU32","GROWABLE_HEAP_F64","HEAPF64","readyPromiseResolve","readyPromiseReject","Module","Promise","resolve","reject","key","moduleOverrides","hasOwnProperty","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","versions","node","ENVIRONMENT_IS_PTHREAD","read_","readAsync","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","path","nodeWorkerThreads","require$$0","dirname","__dirname","filename","binary","require$$1","ret","replace","ex","ExitStatus","abort","require$$2","console","error","global","Worker","read","f","data","readbuffer","scriptArgs","quit","print","log","warn","printErr","self","location","href","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","performance","require$$3","wasmBinary","bind","err","wasmModule","noExitRuntime","ABORT","text","getCFunc","ident","func","ccall","returnType","argTypes","opts","toC","string","str","len","stringToUTF8","stackAlloc","array","arr","writeArrayToMemory","cArgs","stack","converter","stackSave","apply","UTF8ToString","Boolean","convertReturnValue","stackRestore","numericArgs","arguments","UTF8ArrayToString","heap","maxBytesToRead","endIdx","u0","u1","u2","String","fromCharCode","ch","ptr","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","outPtr","lengthBytesUTF8","alignUp","multiple","buf","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","INITIAL_MEMORY","Memory","initial","maximum","shared","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","___wasm_call_ctors","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","removeRunDependency","clearInterval","callback","what","RuntimeError","hasPrefix","prefix","prototype","startsWith","dataURIPrefix","isDataURI","fileURIPrefix","isFileURI","wasmBinaryFile","getBinary","file","getBinaryPromise","fetch","credentials","then","catch","createWasm","info","asmLibraryArg","receiveInstance","instance","module","exports","numWorkersToLoad","PThread","unusedWorkers","w","loadWasmModuleToWorker","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateStreaming","ASM_CONSTS","8991","$0","$1","setTimeout","__emscripten_do_dispatch_to_thread","initPthreadsJS","callbacks","arg","_emscripten_futex_wake","addr","count","Infinity","mainThreadWaitAddress","Atomics","load","__emscripten_main_thread_futex","mainThreadWoken","compareExchange","notify","killThread","pthread_ptr","pthread","pthreads","worker","terminate","freeThreadData","runningWorkers","cancelThread","cmd","cleanupThread","returnWorkerToPool","_emscripten_get_now","initMainThreadBlock","allocateUnusedWorker","tb","_malloc","headPtr","tlsMemory","store","__emscripten_thread_init","_emscripten_register_main_browser_thread_id","initWorker","threadExitHandlers","setThreadStatus","runExitHandlers","pop","_pthread_self","___pthread_tsd_run_dtors","threadExit","exitCode","threadCancel","terminateAllThreads","threadInfoStruct","allocatedOwnStack","stackBase","runWithoutMainThreadQueuedCalls","__emscripten_allow_main_runtime_queued_calls","receiveObjectTransfer","onFinishedLoading","onmessage","d","currentProxiedOperationCallerThread","thread","targetThread","_emscripten_main_thread_process_queued_calls","spawnThread","loaded","runPthread","alert","exit","target","lineno","message","on","urlOrBlob","pthreadMainJs","getNewWorker","busySpinWait","msecs","now","establishStackSpace","stackTop","stackMax","_emscripten_stack_set_limits","getNoExitRuntime","invokeEntryPoint","___assert_fail","line","___call_main","argc","argv","_main","setErrNo","___errno_location","_atexit","_emscripten_proxy_to_main_thread_js","__emscripten_notify_thread_queue","targetThreadId","mainThreadId","_abort","_emscripten_asm_const_int","code","sigPtr","argbuf","readAsmConstArgs","_emscripten_conditional_set_current_thread_status","expectedStatus","newStatus","_emscripten_futex_wait","val","timeout","tNow","tEnd","exchange","wait","_emscripten_memcpy_big","dest","num","copyWithin","_emscripten_num_logical_cores","require$$4","cpus","navigator","index","sync","numCallArgs","serializedNumCallArgs","_emscripten_run_in_main_runtime_thread_js","dateNow","_emscripten_receive_on_main_thread_js_callArgs","readAsmConstArgsArray","double","_emscripten_receive_on_main_thread_js","proxiedFunctionTable","_emscripten_get_heap_size","emscripten_realloc_buffer","grow","_emscripten_resize_heap","requestedSize","oldSize","cutDown","overGrownHeapSize","min","JSEvents","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","call","sort","y","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","allowsDeferredCalls","runDeferredCalls","removeAllHandlersOnTarget","eventTypeString","h","removeEventListener","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","event","handlerFunc","callbackfunc","addEventListener","queueEventHandlerOnThread_iiii","eventHandlerFunc","eventTypeId","eventData","userData","varargs","__emscripten_call_on_thread","getTargetThreadForEventCallback","getNodeNameForTarget","screen","nodeName","fullscreenEnabled","webkitFullscreenEnabled","stringToNewUTF8","jsString","cString","_emscripten_set_offscreencanvas_size_on_target_thread_js","targetCanvas","width","height","targetCanvasPtr","_emscripten_set_offscreencanvas_size_on_target_thread","maybeCStringToJsString","specialHTMLTargets","findEventTarget","querySelector","findCanvasEventTarget","_emscripten_set_canvas_element_size_calling_thread","canvas","canvasSharedPtr","offscreenCanvas","controlTransferredOffscreen","autoResizeViewport","GLctxObject","GLctx","prevViewport","getParameter","viewport","_emscripten_set_canvas_element_size_main_thread","_emscripten_set_canvas_element_size","_emscripten_set_current_thread_status","_emscripten_set_thread_name","threadId","name","__webgl_enable_ANGLE_instanced_arrays","ctx","ext","getExtension","divisor","mode","first","primcount","__webgl_enable_OES_vertex_array_object","vao","__webgl_enable_WEBGL_draw_buffers","n","bufs","__webgl_enable_WEBGL_multi_draw","multiDrawWebgl","GL","counter","buffers","programs","framebuffers","renderbuffers","textures","uniforms","shaders","vaos","contexts","offscreenCanvases","timerQueriesEXT","programInfos","stringCache","unpackAlignment","recordError","errorCode","lastError","getNewId","table","getSource","shader","source","createContext","webGLContextAttributes","getContext","registerContext","handle","context","attributes","version","majorVersion","enableExtensionsByDefault","initExtensions","makeContextCurrent","contextHandle","currentContext","deleteContext","initExtensionsDone","disjointTimerQueryExt","getSupportedExtensions","populateUniformTable","program","ptable","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","utable","numUniforms","getProgramParameter","getActiveUniform","loc","getUniformLocation","__emscripten_webgl_power_preferences","_emscripten_webgl_do_create_context","powerPreference","contextAttributes","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","minorVersion","explicitSwapControl","proxyContextToMainThread","renderViaOffscreenBackBuffer","_emscripten_webgl_create_context","a0","a1","SYSCALLS","mappings","printChar","stream","curr","getStr","get64","low","high","_fd_close","fd","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","_pthread_cleanup_pop","execute","routine","_pthread_cleanup_push","threadParams","stackHigh","stackSize","tis","detached","global_locale","_emscripten_get_global_libc","msg","start_routine","startRoutine","time","transferList","_pthread_create","attr","_emscripten_sync_run_in_main_thread_4","_memalign","_sysconf","maxHeapSize","calledRun","r","c","z","q","m","g","o","l","this","run","doRun","implicit","returnCode","runCaller","ready","WasmBackendModule","UTF8Decoder","TextDecoder","endPtr","decode","BackendWasm","KernelBackend","[object Object]","super","tfjs","init","DataStorage","engine","dataIdNextNumber","move","numDataIds","kernelMs","refCount","memoryOffset","numBytes","bytesPerElement","registerTensor","byteOffset","typedArrayFromBuffer","force","has","delete","dispose","unreliable","write","getPathToWasmBinary","simdSupported","threadsSupported","wasmModuleFolder","wasmPath","wasmFileMap","all","getAsync","factoryConfig","endsWith","blob","Blob","URL","createObjectURL","wasmPathPrefix","customFetch","instantiateWasm","imports","arrayBuffer","createInstantiateWasmFunc","initialized","onAbort","initAborted","mainScriptUrlOrBlob","wasmFactoryThreadedSimd","toString","wasmFactory","wasmBinaryNames","setWasmPath","usePlatformFetch","deprecationWarn","setWasmPaths","prefixOrFileMap","missingPaths","join","registerBackend"],"mappings":"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"}